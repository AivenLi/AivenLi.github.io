{"code":0,"msg":"success","data":[{"title":"数据流图中带有箭头的线段表示的是（ ）。","chooseList":[{"title":"控制流","index":0,"selected":false},{"title":"数据流","index":1,"selected":false},{"title":"模块调用","index":2,"selected":false},{"title":"事件驱动","index":3,"selected":false}],"mode":0,"answer":1,"parse":"数据流图中带有箭头的线段表示的是数据流，即沿箭头方向传送数据的通道，一般在旁边标注数据流名。"},{"title":"与其他面向对象语言相比，Java语言突出的特点是（ ）。","chooseList":[{"title":"支持网络通信","index":0,"selected":false},{"title":"支持多重继承","index":1,"selected":false},{"title":"支持动态联编","index":2,"selected":false},{"title":"解释型，与平台无关","index":3,"selected":false}],"mode":0,"answer":3,"parse":"Java只需要一次编译，在各种平台上均可运行，只要该平台安装了Java虚拟机。"},{"title":"下列选项中，可实现无限循环的语句是（ ）。","chooseList":[{"title":"while ( true ) {}","index":0,"selected":false},{"title":"while ( 1 ) {}","index":1,"selected":false},{"title":"while ( !0 ) {}","index":2,"selected":false},{"title":"for () {}","index":3,"selected":false}],"mode":0,"answer":0,"parse":"Java中判断条件的结果只能是true或者false。"},{"title":"Java语言的四大特性包括抽象、封装、多态和（ ）。","chooseList":[{"title":"继承","index":0,"selected":false},{"title":"模块化","index":1,"selected":false},{"title":"结构化","index":2,"selected":false},{"title":"确定性","index":3,"selected":false}],"mode":0,"answer":0,"parse":""},{"title":"软件的生命周期是指（ ）。","chooseList":[{"title":"软件的实现和维护","index":0,"selected":false},{"title":"软件的运行和维护","index":1,"selected":false},{"title":"软件的需求分析、设计与实现","index":2,"selected":false},{"title":"软件产品从提出、实现、使用维护到停止使用退役的过程","index":3,"selected":false}],"mode":0,"answer":3,"parse":"通常，将软件产品从提出、实现、使用维护到停止使用退役的过程称为软件生命周期。也就是说，软件产品从考虑其概念开始，到该软件产品不能使用为止的整个时期都属于软件生命周期。"},{"title":"OutputStream类中flush()方法的功能是（ ）。","chooseList":[{"title":"写入一个字符","index":0,"selected":false},{"title":"写入一个整数","index":1,"selected":false},{"title":"将缓冲的全部字节写入输出流","index":2,"selected":false},{"title":"写入一个双精度浮点数","index":3,"selected":false}],"mode":0,"answer":2,"parse":""},{"title":"下列关于Java线程构成的选项中，正确的是（ ）。","chooseList":[{"title":"代码、真是的CPU、代码所操作的数据","index":0,"selected":false},{"title":"代码、代码所操作的数据","index":1,"selected":false},{"title":"代码、虚拟的CPU、代码所操作的数据","index":2,"selected":false},{"title":"虚拟的CPU、代码所操作的数据","index":3,"selected":false}],"mode":0,"answer":2,"parse":""},{"title":"带链队列空的条件是（ ）。","chooseList":[{"title":"front\u003drear\u003dNULL","index":0,"selected":false},{"title":"front\u003d-1且rear\u003dNULL","index":1,"selected":false},{"title":"front\u003dNULL且rear\u003d-1","index":2,"selected":false},{"title":"front\u003drear\u003d-1","index":3,"selected":false}],"mode":0,"answer":0,"parse":"带链的队列就是用一个单链表来表示的队列，队列中的每一个元素对应链表中的一个结点。队列空时，头指针和尾指针都为NULL。"},{"title":"一个栈的初始状态为空。现将元素1、2、3、4、5、A、B、C、D、E依次入栈，然后再依次出栈，则元素出栈的顺序是（ ）。","chooseList":[{"title":"12345ABCDE","index":0,"selected":false},{"title":"EDCBA54321","index":1,"selected":false},{"title":"ABCDE12345","index":2,"selected":false},{"title":"54321EDCBA","index":3,"selected":false}],"mode":0,"answer":1,"parse":"栈是按先进后出的原则组织数据，所以入栈最早的最后出栈。"},{"title":"在软件开发中，需求分析阶段可以使用的工具是（ ）。","chooseList":[{"title":"N-S图","index":0,"selected":false},{"title":"DFD图","index":1,"selected":false},{"title":"PAD图","index":2,"selected":false},{"title":"程序流程图","index":3,"selected":false}],"mode":0,"answer":1,"parse":"在需求分析阶段可以使用的工具是有数据流图DFD图，数据字典DD，判定树与判定表，故选B。"},{"title":"下列方法名的定义中，符合Java命名约定的是（ ）。","chooseList":[{"title":"public void \u0026printString()","index":0,"selected":false},{"title":"public void PrintString()","index":1,"selected":false},{"title":"public void _printString()","index":2,"selected":false},{"title":"public void printString()","index":3,"selected":false}],"mode":0,"answer":3,"parse":"Java命名约定：采用驼峰命名；\n类：首字母大写；\n方法和变量：首字母小写。"},{"title":"下列代码段执行后，a的值为（ ）。\nint x \u003d 0, a \u003d 0, b \u003d 0;\nswitch ( x ) {\ncase 0: \ncase 1: a++; b++;\ncase 2: a++;\ncase 3: b++;\n}\n","chooseList":[{"title":"0","index":0,"selected":false},{"title":"1","index":1,"selected":false},{"title":"2","index":2,"selected":false},{"title":"4","index":3,"selected":false}],"mode":0,"answer":2,"parse":"x的值为0，执行case 0，但是没有break，因此会向下执行所有的case部分。所以执行该代码段之后a的值为2。"},{"title":"下列方法中，重载了void getSort(int x)的是（ ）。","chooseList":[{"title":"public getSort(float x)","index":0,"selected":false},{"title":"int getSort(int y)","index":1,"selected":false},{"title":"double getSort(int x, int y)","index":2,"selected":false},{"title":"void get(int x, int y)","index":3,"selected":false}],"mode":0,"answer":2,"parse":""},{"title":"下列代码运行时产生的异常是（ ）。\npublic void testAException() {\nList list \u003d new ArrayList();\nlist.add(\"t\");\nlist.add(\"a\");\nlist.add(\"n\");\nlist.add(\"k\");\nlist.add(\"s\");\nCollections.swap(list, 0, 9);\n}\n","chooseList":[{"title":"IndexOutOfBoundsException","index":0,"selected":false},{"title":"IOException","index":1,"selected":false},{"title":"ArithmeticException","index":2,"selected":false},{"title":"InterruptedException","index":3,"selected":false}],"mode":0,"answer":0,"parse":"因为list只有5个元素，而在Collection.swap中传入了9（即第9个元素），会造成访问越界。故选A。"},{"title":"下列程序完成了将一个文件的内容写入另一个文件的功能，在下划线处应填入的代码是（ ）。\nimport java.io.*;\npublic class Test {\npublic static String file \u003d \"d:\\\\book1.java\";\npublic static void main(String[] args)  throws Exception {\nBufferedReader in \u003d new _______(new FileReader(\"d:\\\\book.txt\"));\nPrintWriter out \u003d new PrintWriter(file);\nString s \u003d null;\nwhile ( ( s \u003d in.readLine() ) !\u003d null ) {\nout.write(s);\n}\nout.close();\nin.close();\n}\n}\n","chooseList":[{"title":"BufferedReader","index":0,"selected":false},{"title":"FileReader","index":1,"selected":false},{"title":"File","index":2,"selected":false},{"title":"Reader","index":3,"selected":false}],"mode":0,"answer":0,"parse":"代码中，in是类BufferedReader的对象，通过new获取BufferedReader的实例，所以选A。"},{"title":"阅读下列程序：\nimport java.util.*;\nclass ThreadTest5 ___________{\nString name;\npublic ThreadTest5(String n) {\nname \u003d n;\n}\npublic void ______() {\nwhile ( true ) {\ntry {\nSystem.out.println(name + \":\" + new Date());\nThread.sleep(1000);\n} catch(Exception e) {\nSystem.out.println(e);\n}\n}\n}\n\nstatic public void main(String[] args) {\nThreadTest5 tp1 \u003d new ThreadTest5(\"A\");\ntp1.start();\nThreadTest5 tp2 \u003d new ThreadTest5(\"B\");\ntp2.start();\n}\n}\n若要使程序运行时创建两个线程，分别打印当前日期与时间，则在下划线处应填入的码代码是（ ）。","chooseList":[{"title":"extends Thread, start","index":0,"selected":false},{"title":"implements Runnable, run","index":1,"selected":false},{"title":"implements Runnable, start","index":2,"selected":false},{"title":"extends Thread, run","index":3,"selected":false}],"mode":0,"answer":3,"parse":""},{"title":"下列叙述中正确的是（ ）。","chooseList":[{"title":"循环队列中元素的个数是由队头指针和队尾指针共同决定","index":0,"selected":false},{"title":"循环队列有队头和队尾两个指针，因此，循环队列是非线性结构","index":1,"selected":false},{"title":"在循环队列中，只需要队头指针就能反映队列中元素的动态变化情况","index":2,"selected":false},{"title":"在循环队列中，只需要队尾指针就能反映队列中元素的动态变化情况","index":3,"selected":false}],"mode":0,"answer":0,"parse":"循环队列有队头和队尾两个指针，但是循环队列仍是线性结构，所以B错误；在循环队列中只需要队头指针与队尾两个指针来共同反映队列中元素的动态变化情况，C、D错误。"},{"title":"在面向对象方法中，不属于“对象”基本特点的是（ ）。","chooseList":[{"title":"一致性","index":0,"selected":false},{"title":"分类性","index":1,"selected":false},{"title":"多态性","index":2,"selected":false},{"title":"表示唯一性","index":3,"selected":false}],"mode":0,"answer":0,"parse":"对象有如下一些基本特点：标识唯一性、分类性、多态性、封装性、模块独立性好。故选A。"},{"title":"下列运算符中，优先级最高的是（ ）。","chooseList":[{"title":"--","index":0,"selected":false},{"title":"*","index":1,"selected":false},{"title":"\u003d","index":2,"selected":false},{"title":",","index":3,"selected":false}],"mode":0,"answer":0,"parse":""},{"title":"下列代码段执行后输出结果是（ ）。\nint x \u003d 0;\nwhile ( x \u003c\u003d 5 )\nx++;\nSystem.out.print(x + \" \");\n","chooseList":[{"title":"0","index":0,"selected":false},{"title":"1","index":1,"selected":false},{"title":"5","index":2,"selected":false},{"title":"6","index":3,"selected":false}],"mode":0,"answer":3,"parse":"x初始值为0，每次循环x+1，因此当x为6的时候不满足循环条件，所以输出结果为6。"},{"title":"下列代码段执行后的结果是（ ）。\nString s1 \u003d \"China\";\nString s2 \u003d s1.concat(\"Dream\");\nString s3 \u003d s2.replace(\"aD\", \"a$$D\");\nSystem.out.println(s3);\n","chooseList":[{"title":"China$$Dream","index":0,"selected":false},{"title":"ChinaDream","index":1,"selected":false},{"title":"China","index":2,"selected":false},{"title":"Dream","index":3,"selected":false}],"mode":0,"answer":0,"parse":"concat是拼接字符串，因此s2\u003d\"ChinaDream\"；replace是替换字符串，第一个参数是要替换的字符串，第二个参数是替换之后的字符串；所以s3\u003d\"China$$Dream\"。故选A。"},{"title":"下列关于HashMap类的描述中，错误的是（ ）。","chooseList":[{"title":"HashMap使用\u003c关键字, 值\u003e的形式保存数据","index":0,"selected":false},{"title":"HaseMap能够保证其中元素的顺序","index":1,"selected":false},{"title":"HashMap允许将null用作关键字","index":2,"selected":false},{"title":"HashMap允许将null用作值","index":3,"selected":false}],"mode":0,"answer":1,"parse":"HashMap是根据HashCode来存储的，因此顺序不一定是插入的顺序。"},{"title":"事件类所在的包是（ ）。","chooseList":[{"title":"javax.swing.border","index":0,"selected":false},{"title":"java.util","index":1,"selected":false},{"title":"java.awt.event","index":2,"selected":false},{"title":"javax.swing.filechooser","index":3,"selected":false}],"mode":0,"answer":2,"parse":"这是一道送分题，通过包名也可以看出来选C。"},{"title":"下列关于对象锁的描述中，错误的是（ ）。","chooseList":[{"title":"当synchronized(){}语句块执行完毕后，对象锁将自动释放","index":0,"selected":false},{"title":"当在synchronized(){}语句块中出现异常时，对象锁将自动释放","index":1,"selected":false},{"title":"若线程A调用线程B的suspend()方法，则B将释放所持有的锁","index":2,"selected":false},{"title":"线程A在synchronized块中调用x.wait()，则A将释放对象x的锁","index":3,"selected":false}],"mode":0,"answer":2,"parse":""},{"title":"在长度为n的有序线性表中进行二分查找，最坏情况下需要比较的次数是（ ）。","chooseList":[{"title":"O(n)","index":0,"selected":false},{"title":"O(n^2)","index":1,"selected":false},{"title":"O(log2n)","index":2,"selected":false},{"title":"O(nlog2n)","index":3,"selected":false}],"mode":0,"answer":2,"parse":"当有序线性表为顺序存储时才能用二分法查找。可以证明的是对于长度为n的有序线性表，在最坏情况下，二分法查找只需要比较log2n次，而顺序查找需要比较n次。"},{"title":"一间宿舍可住多个学生，则实体宿舍和学生之间的联系是（ ）。","chooseList":[{"title":"一对一","index":0,"selected":false},{"title":"一对多","index":1,"selected":false},{"title":"多对一","index":2,"selected":false},{"title":"多对多","index":3,"selected":false}],"mode":0,"answer":1,"parse":"因为一间宿舍可以住多个学生即多个学生住在一个宿舍中，但一个学生只能住一间宿舍，所以实体宿舍和学生之间是一对多的关系。"},{"title":"下列代码段执行后，t的值为（ ）。\nint a \u003d 5, b \u003d 8, c \u003d 3, t \u003d 0;\nt \u003d a \u003c b ? ( a \u003c c ? a : ( b \u003c c ? b : c ) ) : 1;\n","chooseList":[{"title":"1","index":0,"selected":false},{"title":"3","index":1,"selected":false},{"title":"5","index":2,"selected":false},{"title":"8","index":3,"selected":false}],"mode":0,"answer":1,"parse":"“?:”表达式是这样的：\u003c条件\u003e ? [true执行的语句] : [false执行的语句]。“?:”运算符先运算“?”前的表达式，再执行“?”后的表达式。题目中a小于b，因此执行“:”前的表达式；a大于c，因此执行“:”后的表达式，即c。故选B。"},{"title":"下列代码段执行后的结果是（ ）。\nint s;\nfor ( int i \u003d 10; i \u003c 19; i++ ) {\ns \u003d 0;\nfor ( int j \u003d 2; j \u003c i; j++ )\nif ( i % j \u003d\u003d 0 ) s \u003d s + j;\nif ( s \u003e j ) System.out.print(i+ \" \");\n}\n","chooseList":[{"title":"18","index":0,"selected":false},{"title":"10 12","index":1,"selected":false},{"title":"12 18","index":2,"selected":false},{"title":"12 16 18","index":3,"selected":false}],"mode":0,"answer":2,"parse":""},{"title":"判断两个字符串str1和str2是否完全相等，应该使用的表达式是（ ）。","chooseList":[{"title":"str1.equals(str2)","index":0,"selected":false},{"title":"str1 \u003d str2","index":1,"selected":false},{"title":"str1 \u003d\u003d str2","index":2,"selected":false},{"title":"str1.equalsIgnoreCase(str2)","index":3,"selected":false}],"mode":0,"answer":0,"parse":"B选项是赋值表达式；C选项是判断str1和str2是否是同一个地址；D选项是在忽略大小写的情况下判断str1是否等于str2。"},{"title":"下列关于过滤流的描述中，错误的是（ ）。","chooseList":[{"title":"FilterOutputStream是OutputStream的子类","index":0,"selected":false},{"title":"FilterInputStream是InputStream的子类","index":1,"selected":false},{"title":"FilterOutputStream和FilterInputStream不能直接产生实例","index":2,"selected":false},{"title":"对数据的过滤只是对其进行筛选","index":3,"selected":false}],"mode":0,"answer":3,"parse":""},{"title":"处理鼠标进入窗口时所产生鼠标事件的方法是（ ）。","chooseList":[{"title":"mouseMoved(MouseEvent)","index":0,"selected":false},{"title":"mousePressed(MouseEvent)","index":1,"selected":false},{"title":"mouseReleased(MouseEvent)","index":2,"selected":false},{"title":"mouseEntered(MouseEvent)","index":3,"selected":false}],"mode":0,"answer":3,"parse":"A选项是鼠标移动事件；B选项是鼠标按下事件；C选项是鼠标释放（按键）事件。故选D。"},{"title":"下列Applet的方法中，不能由浏览器自动调用的是（ ）。","chooseList":[{"title":"stop()","index":0,"selected":false},{"title":"finish()","index":1,"selected":false},{"title":"start()","index":2,"selected":false},{"title":"init()","index":3,"selected":false}],"mode":0,"answer":1,"parse":""},{"title":"下列叙述中正确的是（ ）。","chooseList":[{"title":"链式存储结构比顺序存储结构节省存储空间","index":0,"selected":false},{"title":"顺序存储结构能存储有序表，链式存储结构不能存储有序表","index":1,"selected":false},{"title":"顺序存储结构只针对线性结构，链式存储结构只针对非线性结构","index":2,"selected":false},{"title":"顺序存储结构的存储一定是连续的，链式存储结构的存储空间不一定是连续的","index":3,"selected":false}],"mode":0,"answer":3,"parse":"链式存储结构中每个结点都有数据域与指针域两部分组成，增加了存储空间，A错误；链式存储结构既可以针对线性结构也可以针对非线性结构，所以B和C错误。"},{"title":"在数据管理技术发展的三个阶段中，数据共享最好的是（ ）。","chooseList":[{"title":"人工管理阶段","index":0,"selected":false},{"title":"文件系统阶段","index":1,"selected":false},{"title":"数据库系统阶段","index":2,"selected":false},{"title":"三个阶段相同","index":3,"selected":false}],"mode":0,"answer":2,"parse":"数据管理发展至今已经历了三个阶段：人工管理阶段、文件系统阶段和数据库系统阶段。其中最后一个阶段结构简单，使用方便逻辑性强物理性少，在各方面的表现都最好，一直占据数据库领域的主导地位，故选C。"},{"title":"使表达式x % 2 \u003d\u003d 0 \u0026\u0026 x \u003e 50 || x \u003c 20的值为false的选项是（ ）。","chooseList":[{"title":"x \u003d 15","index":0,"selected":false},{"title":"x \u003d 18","index":1,"selected":false},{"title":"x \u003d 60","index":2,"selected":false},{"title":"x \u003d 85","index":3,"selected":false}],"mode":0,"answer":3,"parse":"因为“\u0026\u0026”的优先级比“||”的优先级高，因此上述表达式实际上是这样的：“( x % 2 \u003d\u003d 0 \u0026\u0026 x \u003e 50 ) || x \u003c 20”。因此可以先排除A和B选项；C选项中，||左边的表达式为true，因此C错误。故选D。"},{"title":"下列代码段执行后，n的值为（ ）。\nint[] a \u003d new int[5];\nint i, n \u003d 0;\nfor ( i \u003d 0; i \u003c 5; i++ )\na[i] \u003d 1;\nfor ( i \u003d 1; i \u003c 5; i +\u003d 2 )\na[i] \u003d a[i-1] * 10 + i;\nfor ( i \u003d 0; i \u003c 5; i++ )\nif ( a[i] \u003e 10 ) n++;\n","chooseList":[{"title":"1","index":0,"selected":false},{"title":"2","index":1,"selected":false},{"title":"3","index":2,"selected":false},{"title":"5","index":3,"selected":false}],"mode":0,"answer":1,"parse":"第一个循环初始化数组a的5个元素均为1。第二个循环中，i取值1、3，所以a[1]、a[3]的值会被改变，a[1]\u003da[0]*10+1\u003d11，a[3]\u003da[2]*10+3\u003d13,；第二个循环结束后a的元素分别为：“1、11、1、13、1”。最后一个循环是判断数组a中的元素是否大于10，如果大于10则n加1。故选B"},{"title":"下列代码段运行后的结果是（ ）。\nint[][] a \u003d new int[4][4];\nint i, j, s \u003d 0;\nfor ( i \u003d 0; i \u003c 4; i++ )\nfor ( j \u003d 0; j \u003c 4; j++ )\na[i][j] \u003d (i+1)*(j+1);\nfor ( i \u003d 0; i \u003c 4; i++ )\ns \u003d s + a[3-i][3-i];\nSystem.out.print(s);\n","chooseList":[{"title":"10","index":0,"selected":false},{"title":"20","index":1,"selected":false},{"title":"30","index":2,"selected":false},{"title":"100","index":3,"selected":false}],"mode":0,"answer":2,"parse":"第一个循环（包含内循环）是对数组a赋初值，循环结束后a的各个元素的值分别为：\n1，2，3，4\n2，4，6，8\n3，6，9，12\n4，8，12，16\n第二个循环是对a[3][3]、a[2][2]、a[1][1]和a[0][0]的值进行累加（即累加二维数组a的对角线元素的值），1+4+9+16\u003d30。故选C。"},{"title":"PipedInputStream类是（ ）。","chooseList":[{"title":"字节数组输出类","index":0,"selected":false},{"title":"实现线程之间通信的类","index":1,"selected":false},{"title":"带数据校验的输入类","index":2,"selected":false},{"title":"过滤输入类","index":3,"selected":false}],"mode":0,"answer":1,"parse":""},{"title":"JOptionPane不能实现的对话框是（ ）。","chooseList":[{"title":"消息对话框","index":0,"selected":false},{"title":"通用对话框","index":1,"selected":false},{"title":"输入对话框","index":2,"selected":false},{"title":"确认对话框","index":3,"selected":false}],"mode":0,"answer":1,"parse":""},{"title":"要向主类为Audio Test的Applet传递参数，应该在下列audioest.html文件的下划线处填入的代码是（ ）。\n\u003cHTML\u003e\n\u003cBODY\u003e\n\u003cAPPLET CODE\u003d\"________\" WIDTH\u003d150 HEIGHT\u003d25\u003e\n\u003c_________NAME\u003daudio VALUE\u003d\"test.wav\"\u003e\n\u003c/APPLET\u003e\n\u003c/BODY\u003e\n\u003c/HTML\u003e","chooseList":[{"title":"AudioTest.class, PARAM","index":0,"selected":false},{"title":"audiotest.html, PARAMETER","index":1,"selected":false},{"title":"AudioTest, param","index":2,"selected":false},{"title":"audiotest.class, parameter","index":3,"selected":false}],"mode":0,"answer":0,"parse":""}]}