{"code":0,"msg":"success","data":[{"title":"下列叙述中正确的是（ ）。","chooseList":[{"title":"所谓算法就是计算方法","index":0,"selected":false},{"title":"程序可以作为算法的一种描述方法","index":1,"selected":false},{"title":"算法设计只需要考虑得到计算结果","index":2,"selected":false},{"title":"算法设计可以忽略算法的运算时间","index":3,"selected":false}],"mode":0,"answer":1,"parse":"算法是指对解题方案的准确而完整的描述，算法不等于数学上的计算方法，也不等于程序，A错误；算法设计需要考虑可行性、确定性、有穷性与足够的情报，不能只考虑计算结果，C错误；算法设计有穷性是指操作步骤有限且能在有限时间内完成，如果一个算法执行耗费的时间太长，即使最终得出了正确的结果，也是没有意义的，D错误。故选B"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nint c, d;\nc \u003d 10 ^ 3;\nd \u003d 10 + 3;\nprintf(\"%d,%d\\n\", c, d);\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"103,13","index":0,"selected":false},{"title":"13,13","index":1,"selected":false},{"title":"10,13","index":2,"selected":false},{"title":"9,13","index":3,"selected":false}],"mode":0,"answer":3,"parse":"c语言中“^”表示按位异或，因此10^3的结果为9。故选D"},{"title":"有语句：k\u003dx\u003cy?(y\u003cz?1:0):0;\n以下选项中，与此语句功能相同的是（ ）。","chooseList":[{"title":"if ( x \u003c y || y \u003c z ) k \u003d 1; else k \u003d 0;","index":0,"selected":false},{"title":"if ( x \u003c y ) k \u003d 0; else if ( y \u003c z ) k \u003d 1;","index":1,"selected":false},{"title":"if ( x \u003c y ) if ( y \u003c z ) k \u003d 1; else k \u003d 0;","index":2,"selected":false},{"title":"if ( x \u003c y \u0026\u0026 y \u003c z ) k \u003d 1; else k \u003d 0;","index":3,"selected":false}],"mode":0,"answer":3,"parse":"表达式1?表达式2:表达式3，若表达式1为真，则执行表达式2，表达式2的值就作为整个条件表达式的值，否则执行表达式3，表达式3的值就作为整个条件表达式的值。题中，k\u003dx\u003cy?(y\u003cz?1:0):0，执行顺序为先判断x\u003cy是否为真，为真时执行(y\u003cz?1:0)，再判断y\u003cz是否为真，为真时，k\u003d1否则k\u003d0。故选D"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nint x[3][3] \u003d { {2}, {4}, {6} }, i, *q \u003d \u0026x[0][0];\nfor ( i \u003d 0; i \u003c 2; i++ ) {\nif ( i \u003d\u003d 0 ) x[i][i+1] \u003d *q + 1;\nelse ++q;\nprintf(\"%d\", *q);\n}\nprintf(\"\\n\");\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"2 3","index":0,"selected":false},{"title":"2 6","index":1,"selected":false},{"title":"3 3","index":2,"selected":false},{"title":"3 6","index":3,"selected":false}],"mode":0,"answer":0,"parse":"题中把数组首元素地址赋值给指针q变量，在for语句中，i\u003d0，满足if语句，把指针q指向的单元值加1，等于3赋值给x[0][1]，接着输出q指针指向单元的值2；i+1后再次进入循环体，此时i不等于0，指针q地址加1，指向x[0][1]，此时*q\u003d3，因此最后函数输出的分别是2，3。故选A"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nint x \u003d 0x13;\nprintf(\"INT:%d\\n\", x+1);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"INT:14","index":0,"selected":false},{"title":"INT:13","index":1,"selected":false},{"title":"INT:12","index":2,"selected":false},{"title":"INT:20","index":3,"selected":false}],"mode":0,"answer":3,"parse":"0x13是十六进制数，%d需要输出十进制数，0x13对应的十进制为19，加1得20。故选D"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint main() {\nint i;\nfor ( i \u003d 0; i \u003c 5; i++ )\nputchar(\u0027Z\u0027-i);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"\u0027X\u0027\u0027Y\u0027\u0027Z\u0027\u0027W\u0027\u0027V\u0027","index":0,"selected":false},{"title":"VWXYZ","index":1,"selected":false},{"title":"ZYXWV","index":2,"selected":false},{"title":"\u0027ABCDE\u0027","index":3,"selected":false}],"mode":0,"answer":2,"parse":""},{"title":"以下叙述中错误的是（ ）。","chooseList":[{"title":"基类型不同的指针可以直接相互赋值","index":0,"selected":false},{"title":"函数可以通过指针形参向所指单元传回数据","index":1,"selected":false},{"title":"字符型指针可以指向一个字符串","index":2,"selected":false},{"title":"指针的运用可使程序代码效率更高","index":3,"selected":false}],"mode":0,"answer":0,"parse":"把一个指针变量的值赋给另一个指针变量，但一定要确保这两个指针变量的基类型是相同的。故选A"},{"title":"深度为5的完全二叉树的结点数不可能是（ ）。","chooseList":[{"title":"15","index":0,"selected":false},{"title":"16","index":1,"selected":false},{"title":"17","index":2,"selected":false},{"title":"18","index":3,"selected":false}],"mode":0,"answer":0,"parse":"在树结构中，定义一棵树的根结点所在的层次为1，其他结点所在的层次等于它的父结点所在的层次加1，树的最大层次称为树的深度。完全二叉树指除最后一层外，每一层上的结点数均达到最大值，在最后一层上只缺少右边的若干结点。深度为5的二叉树，结点个数最多为2^5-1\u003d31，最少为2^4\u003d16，不可能是15。故选A"},{"title":"下面描述不属于软件特点的是（ ）。","chooseList":[{"title":"软件是一种逻辑实体，具有抽象性","index":0,"selected":false},{"title":"软件在使用中不存在磨损、老化问题","index":1,"selected":false},{"title":"软件复杂性高","index":2,"selected":false},{"title":"软件使用不涉及知识产权","index":3,"selected":false}],"mode":0,"answer":3,"parse":"软件具有以下特点：软件是一种逻辑实体，具有抽象性；软件没有明显的制作过程；软件在使用期间不存在磨损、老化问题；对硬件和环境具有依赖性；软件复杂度高，成本昂贵；软件开发涉及诸多的社会因素，如知识产权等。故选D"},{"title":"以下涉及字符串数组、字符指针的程序段，没有编译错误的是（ ）。","chooseList":[{"title":"char *str, name[5];\nstr \u003d \"C/C++\";","index":0,"selected":false},{"title":"char *str, name[6];\nname\u003d\"Hello\";","index":1,"selected":false},{"title":"char str1[7] \u003d \"prog.c\", str2[8];\nstr2 \u003d str1;","index":2,"selected":false},{"title":"char line[];\nline \u003d \"//////\";","index":3,"selected":false}],"mode":0,"answer":0,"parse":"字符数组只能进行初始化，不能直接对字符数组赋值，B、C、D错误。故选A"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nchar name[10] \u003d { \u0027S\u0027, \u0027T\u0027, \u0027R\u0027 };\nname[2] \u003d \u0027#\u0027; name[6] \u003d 0;\nprintf(\"%s\\n\", name);\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"ST#","index":0,"selected":false},{"title":"STR#","index":1,"selected":false},{"title":"STR#0","index":2,"selected":false},{"title":"STR0","index":3,"selected":false}],"mode":0,"answer":0,"parse":"程序首先对name数组进行初始化，再对name[2]赋值为\u0027#\u0027，由于用“%s”格式输出字符串时，以\u0027\\0\u0027作为结束标志，在输出时，系统认为name[2]后面已经结束。故选A"},{"title":"在数据库中，数据模型包括数据结构、数据操作和（ ）。","chooseList":[{"title":"数据约束","index":0,"selected":false},{"title":"数据类型","index":1,"selected":false},{"title":"关系运算","index":2,"selected":false},{"title":"查询","index":3,"selected":false}],"mode":0,"answer":0,"parse":"数据类型通常由数据结构、数据操作及数据约束3部分组成。故选A"},{"title":"以下不是合法C语言转义字符的是（ ）。","chooseList":[{"title":"\u0027\\c\u0027","index":0,"selected":false},{"title":"\u0027\\a\u0027","index":1,"selected":false},{"title":"\u0027\\b\u0027","index":2,"selected":false},{"title":"\u0027\\r\u0027","index":3,"selected":false}],"mode":0,"answer":0,"parse":"C语言中，\u0027\\a\u0027表示响铃，\u0027\\b\u0027表示退格，\u0027\\r\u0027表示回车不换行。故选A"},{"title":"函数rewind(fp)的作用是（ ）。","chooseList":[{"title":"函数rewind(fp)的作用是使文件读写指针指向文件开始位置","index":0,"selected":false},{"title":"使文件位置指针指向文件的末尾","index":1,"selected":false},{"title":"使文件位置指针移至前一个字符的位置","index":2,"selected":false},{"title":"使文件位置指针移至下一个字符的位置","index":3,"selected":false}],"mode":0,"answer":0,"parse":"rewind函数作用是使文件读写指针指向文件开头位置。故选A"},{"title":"以下选项中，合法的数值型常量是（ ）。","chooseList":[{"title":"3.2","index":0,"selected":false},{"title":"\u0027X\u0027","index":1,"selected":false},{"title":"099","index":2,"selected":false},{"title":"0xEH","index":3,"selected":false}],"mode":0,"answer":0,"parse":"099表示的是16进制，应该在099后面加H或者在99前面0x，C错误；0x是十六进制表示法，其中没有H，D错误；\u0027X\u0027不是数值型常量，B错误。故选A"},{"title":"设有定义：int x\u003d7,y\u003d12;，则以下表达式值为3的是（ ）。","chooseList":[{"title":"(y%\u003dx)-(x%\u003d5)","index":0,"selected":false},{"title":"y%\u003d(x%\u003d5)","index":1,"selected":false},{"title":"y%\u003dx-x%5","index":2,"selected":false},{"title":"y%\u003d(x-x%5)","index":3,"selected":false}],"mode":0,"answer":0,"parse":"a%\u003db等价于a\u003da%b，经过计算A选项满足题意要求，故选A"},{"title":"设循环队列为Q（1：m），其初始状态为front\u003drear\u003dm。经过一系列入队与退队运算后，front\u003d30，rear\u003d10。现要在该循环队列中作顺序查找，最坏情况下需要比较的次数为（ ）。","chooseList":[{"title":"19","index":0,"selected":false},{"title":"20","index":1,"selected":false},{"title":"m-19","index":2,"selected":false},{"title":"m-20","index":3,"selected":false}],"mode":0,"answer":3,"parse":"循环队列是队列的一种顺序存储结构，用队尾指针rear指向队列中的队尾元素，用队头指针front指向队头元素的前一个位置，因此，从队头指针front指向的后一个位置直到队尾指针rear指向的位置之间所有的元素均为队列中的元素。队列初始状态为front\u003drear\u003dm，当front\u003d30，rear\u003d10时，队列中有m-30+10+1\u003dm-19个元素，比较次数为m-20次。故选D"},{"title":"线性表的链式存储结构与顺序存储结构相比，链式存储结构的优点有（ ）。","chooseList":[{"title":"节省存储空间","index":0,"selected":false},{"title":"插入与删除运算效率高","index":1,"selected":false},{"title":"便于查找","index":2,"selected":false},{"title":"排序时减少元素的比较次数","index":3,"selected":false}],"mode":0,"answer":1,"parse":""},{"title":"有以下程序\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\ntypedef struct stu {\nchar name[10];\nchar gender;\nint score;\n} STU;\nvoid f(char *name, char *gender, int *score) {\nstrcpy(name, \"Qian\");\n*gender \u003d \u0027f\u0027;\n*score \u003d 350;\n}\nint main() {\nSTU a \u003d { \"Zhao\", \u0027m\u0027, 290 }, b;\nb \u003d a;\nfor ( b.name, \u0026b.gender, \u0026b.score );\nprintf(\"%s,%c,%d,\",a.name,a.gender,a.score);\nprintf(\"%s,%c,%d\\n\",b.name,b.gender,b.score);\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"Zhao,m,290,Qian,f,350","index":0,"selected":false},{"title":"Zhao,m,290,Zhao,m,290","index":1,"selected":false},{"title":"Zhao,m,290,Qian,m,350","index":2,"selected":false},{"title":"Zhao,m,290,Qian,m,290","index":3,"selected":false}],"mode":0,"answer":0,"parse":"main函数中，首先定义两个结构体stu类型的变量a，b，把变量a的信息复制给变量b，再调用函数f，在函数f中，利用指针重新对b变量的成员进行赋值，然后分别输出a和b变量的成员信息。故选A"},{"title":"下面对类-对象主要特征描述正确的是（ ）。","chooseList":[{"title":"对象唯一性","index":0,"selected":false},{"title":"对象无关性","index":1,"selected":false},{"title":"类的单一性","index":2,"selected":false},{"title":"类的依赖性","index":3,"selected":false}],"mode":0,"answer":0,"parse":"对象的基本特点是：标识唯一性、分类型、多态型、封装性、模块独立性好。类是具有共同属性、共同方法的对象的集合，是关于对象的抽象描述，反映属于该对象类型的所有对象的性质。对象具有的性质，类也具有。故选A"},{"title":"字符数组a和b中存储了两个字符串，判断字符串a和b是否相等，应当使用的是（ ）。","chooseList":[{"title":"if(strcmp(a,b)\u003d\u003d0)","index":0,"selected":false},{"title":"if(strcpy(a,b))","index":1,"selected":false},{"title":"if(a\u003d\u003db)","index":2,"selected":false},{"title":"if(a\u003db)","index":3,"selected":false}],"mode":0,"answer":0,"parse":"C语言中，判断字符串是否相等，使用字符串比较函数strcmp，不能使用相等操作符“\u003d\u003d”。故选A"},{"title":"有如下定义\nstruct {\nint num;\nchar name[10];\nstruct {\nint y; int m; int d; } birth;\n} s, *ps \u003d \u0026s;\n以下对内嵌结构体成员的引用形式错误的是（ ）。","chooseList":[{"title":"ps.birth.y","index":0,"selected":false},{"title":"s.birth.y","index":1,"selected":false},{"title":"ps-\u003ebirth.y","index":2,"selected":false},{"title":"(*ps).birth.y","index":3,"selected":false}],"mode":0,"answer":0,"parse":"结构体指针变量访问其成员时使用“-\u003e”，也可以(*ps).成员名的形式。故选A"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nint x \u003d 1, y \u003d 2, z \u003d 3;\nif ( x \u003e 1 )\n if ( y \u003e x ) putchar(\u0027A\u0027);\n else putchar(\u0027B\u0027);\nelse\n if ( z \u003c x ) putchar(\u0027C\u0027);\n else putchar(\u0027D\u0027);\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"D","index":0,"selected":false},{"title":"C","index":1,"selected":false},{"title":"B","index":2,"selected":false},{"title":"A","index":3,"selected":false}],"mode":0,"answer":0,"parse":"main函数中，首先判断x\u003e1，由于x\u003d1不大于1，不进入该if语句，程序跳入else语句判断z\u003cx是否成立，z\u003d3\u003ex\u003d1，条件不成立，因此输出字母D。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nvoid get_put() {\nchar ch;\nch \u003dgetchar();\nif ( ch !\u003d \u0027\\n\u0027 ) get_put();\nputchar(ch);\n}\nint main() {\nget_put();\nreturn 0;\n}\n程序运行时，输入ABCD\u003cCR\u003e，则输出结果是（ ）。","chooseList":[{"title":"DCDC","index":0,"selected":false},{"title":"DCBA","index":1,"selected":false},{"title":"BABA","index":2,"selected":false},{"title":"ABCD","index":3,"selected":false}],"mode":0,"answer":1,"parse":"进入get_put函数后，ch每次保存读进来的字符，如果不是换行符，则继续读取下一个字符常量，当ch保存完\u0027D\u0027后，下一读取不满足if条件，函数进行输出，依次输出\u0027D\u0027，\u0027C\u0027，\u0027B\u0027，\u0027A\u0027。故选B"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nchar w[20], a[5][10] \u003d { \"abcdef\", \"ghijkl\", \"mnopq\", \"rstuv\", \"wxyz\" };\nint i, j;\nfor ( i \u003d 0; i \u003c 5; i++ ) {\nj \u003d 0;\nwhile ( a[i][j] !\u003d \u0027\\0\u0027 ) j++;\nw[i] \u003d a[i][j/2+1];\n}\nw[5] \u003d \u0027\\0\u0027;\nputs(w);\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"ekpuz","index":0,"selected":false},{"title":"agmrw","index":1,"selected":false},{"title":"flqvz","index":2,"selected":false},{"title":"djoty","index":3,"selected":false}],"mode":0,"answer":0,"parse":"在for循环中，执行完while语句，j值为字符串数组a的每行字符串的长度，因此w[i] \u003d a[i][j/2+1]，数组a的元素a[i][j/2+1]的值赋给一维数组w[i]。比如i\u003d0;j\u003d6;a[i][j/2+1]\u003da[0][4]\u003d\u0027e\u0027，将此值赋给w[0]。循环依次给数组W赋值最后输出w。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint main() {\nint a \u003d 9, b;\nb \u003d ( a \u003e\u003e 3 ) % 4;\nprintf(\"%d,%d\\n\", a, b);\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"9,1","index":0,"selected":false},{"title":"4,0","index":1,"selected":false},{"title":"4,3","index":2,"selected":false},{"title":"9,3","index":3,"selected":false}],"mode":0,"answer":0,"parse":"首先，程序执行完成后，a值不变，9右移三位得1，1再对4求余得到余数1赋值给b。故选A"},{"title":"一个运动队有多个队员，一个队员仅属于一个运动队，一个队一般都有一个教练，则实体运动队和队员的联系是（ ）。","chooseList":[{"title":"一对多","index":0,"selected":false},{"title":"一对一","index":1,"selected":false},{"title":"多对一","index":2,"selected":false},{"title":"多对多","index":3,"selected":false}],"mode":0,"answer":0,"parse":""},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nchar *p1 \u003d 0;\nint *p2 \u003d 0;\nfloat *p3 \u003d 0;\nprintf(\"%d,%d,%d\\n\", sizeof(p1),sizeof(p2),sizeof(p3));\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"1,4,8","index":0,"selected":false},{"title":"4,4,4","index":1,"selected":false},{"title":"1,2,4","index":2,"selected":false},{"title":"1,1,4","index":3,"selected":false}],"mode":0,"answer":1,"parse":"sizeof表示求该变量所占的字节空间，同时一个指针变量占用4个字节长度，因此输出4。故选B"},{"title":"有以下函数\nvoid fun(char *p, char *q) {\nwhile ( ( *p++ \u003d *q++ ) !\u003d \u0027\\0\u0027 );\n}\n该函数的功能是（ ）。","chooseList":[{"title":"计算字符串的长度","index":0,"selected":false},{"title":"计算字符串所占字节数","index":1,"selected":false},{"title":"将字符串逆序存放","index":2,"selected":false},{"title":"实现字符串的复制","index":3,"selected":false}],"mode":0,"answer":3,"parse":"函数fun定义两个形参指针变量p和q，while循环语句中，实现功能是把q指针指向的地址的值赋给p指针指向的地址，且每次完成赋值后，移动指针，进行下一次赋值，直到q指针指向字符串结束符时，退出while循环。故选D"},{"title":"以下程序段中，与其他三个功能不同的程序段是（ ）。","chooseList":[{"title":"s\u003d0;i\u003d1;\nfor(;;){s+\u003di;i++;if(i\u003c\u003d10)break;}","index":0,"selected":false},{"title":"s\u003d0,i\u003d1;\nfor(;i\u003c\u003d10;){s+\u003di,i++;}","index":1,"selected":false},{"title":"s\u003d0;\nfor(i\u003d1;i\u003c\u003d10;i++){s+\u003di;}","index":2,"selected":false},{"title":"for(s\u003d0,i\u003d1;i\u003c\u003d10;s+\u003di,i++);","index":3,"selected":false}],"mode":0,"answer":0,"parse":"BCD选项都表示对1到10进行累加后赋给s，而A中含break语句，循环体只执行一次，结束整个循环过程。故选A"},{"title":"关于C语言标识符，以下叙述错误的是（ ）。","chooseList":[{"title":"标识符可全部由数字组成","index":0,"selected":false},{"title":"标识符可全部由下划线组成","index":1,"selected":false},{"title":"标识符可全部由小写字母组成","index":2,"selected":false},{"title":"标识符可全部由大写字母组成","index":3,"selected":false}],"mode":0,"answer":0,"parse":"标识符只能有字母（大小写均可）、数字、下划线组成，且标识符的第一个字符只能是字母或下划线。故选A"},{"title":"下列各序列中不是堆的是（ ）。","chooseList":[{"title":"(91,85,53,36,47,30,24,12)","index":0,"selected":false},{"title":"(91,85,53,47,36,30,24,12)","index":1,"selected":false},{"title":"(47,91,53,85,30,12,24,36)","index":2,"selected":false},{"title":"(91,85,53,47,30,12,24,36)","index":3,"selected":false}],"mode":0,"answer":2,"parse":"若有n个元素的序列，将元素按顺序组成一颗完全二叉树，当且仅当满足下列条件时称为堆：大根堆，所有结点的值不大于或等于左右子结点的值；小根堆，所有结点的值小于或等于左右结点的值。A、B、D属于大根堆；C由于47\u003c91，判断属于小根堆，但91\u003e85，不满足条件，不是堆，故选C"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nint i, j \u003d 0;\nchar a[] \u003d \"How are you\", b[10] \u003d { 0 };\nfor ( i \u003d 0; a[i]; i++ )\n if ( a[i] \u003d\u003d \u0027 \u0027 ) b[j++] \u003d a[i+1];\nprintf(\"%s\\n\", b);\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"Hay","index":0,"selected":false},{"title":"Howareyou","index":1,"selected":false},{"title":"we","index":2,"selected":false},{"title":"ay","index":3,"selected":false}],"mode":0,"answer":3,"parse":"for语句循环体执行功能是，每次当a[i]元素为\u0027 \u0027时，自动将a[i]下一个元素赋值给b[j]，赋值完成后，j值加1，因此a[i]的\u0027a\u0027和\u0027y\u0027分别赋值给b[0],b[1]。故选D"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nvoid change(int * a, int len) {\nfor ( ; len \u003e\u003d 0; len-- ) a[len] -\u003d 1;\n}\nint main() {\nint i, a[5] \u003d {2, 2};\nchange(a, 4);\nfor ( i \u003d 0; i \u003c 5; i++ ) printf(\"%d,\", a[i]);\nprintf(\"\\n\");\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"1,1,-1,-1,-1,","index":0,"selected":false},{"title":"1,0,-1,1,-1,","index":1,"selected":false},{"title":"1,1,1,1,1,","index":2,"selected":false},{"title":"1,-1,1,-1,1,","index":3,"selected":false}],"mode":0,"answer":0,"parse":"首先给a赋初值[2,2,0,0,0]，再调用change函数，对a数组中的每一个数进行减1处理，最后使用一个for循环语句进行输出。故选A"},{"title":"以下叙述正确的是（ ）。","chooseList":[{"title":"只使用三种基本结构即可解决任何复杂问题","index":0,"selected":false},{"title":"C语言程序并不是必须要定义main函数","index":1,"selected":false},{"title":"只要程序包含了任意一种基本结构，就肯定是结构化程序","index":2,"selected":false},{"title":"程序中的语法错误只能在运行时才能显现","index":3,"selected":false}],"mode":0,"answer":0,"parse":"C语言程序必须要定义main函数，B错误；如果程序仅是有顺序、选择和循环三种基本程序结构通过组合、嵌套构成是结构化程序，C错误；程序中的语法错误在编译时能显现，D错误。故选A"},{"title":"有以下程序段\nint *p1, *p2, a[10];\np1 \u003d a;\np2 \u003d \u0026a[5];\n则p2-p1的值为（ ）。","chooseList":[{"title":"5","index":0,"selected":false},{"title":"10","index":1,"selected":false},{"title":"12","index":2,"selected":false},{"title":"无法确定","index":3,"selected":false}],"mode":0,"answer":0,"parse":"当直接用数组名给指针赋初始化值时，表示把数组首地址的值赋给指针，p1\u003da，表示把a[0]地址赋给p1，p2\u003d\u0026a[5]，表示将数组第5个元素地址赋给p2，p2-p1\u003d5。故选A"},{"title":"以下选项中错误的是（ ）。","chooseList":[{"title":"a \u0026\u003d b 与 a \u003d a \u0026 b 等价","index":0,"selected":false},{"title":"a ^\u003d b 与 a \u003d a ^ b 等价","index":1,"selected":false},{"title":"a |\u003d b 与 a \u003d a | b 等价","index":2,"selected":false},{"title":"a !^\u003d b 与 a \u003d a !^ b等价","index":3,"selected":false}],"mode":0,"answer":3,"parse":"D选项中，a !\u003d b 表示a不等于b时，运算结果为1，或者为0；而a \u003d a ! b是一种语句错误，!是非运算，且是单目运算符，只要求有一个操作数，故两者不等价。故选D"},{"title":"有以下函数\nint fun(char *ps) {\nchar *p;\np \u003d ps;\nif ( *ps \u003d\u003d 0 ) return 0;\nwhile ( *++p );\nreturn ( p - ps );\n}\n该函数的功能是（ ）。","chooseList":[{"title":"计算字符串的长度","index":0,"selected":false},{"title":"实现字符串的复制","index":1,"selected":false},{"title":"将字符串逆序存放","index":2,"selected":false},{"title":"计算字符串所占字节数","index":3,"selected":false}],"mode":0,"answer":0,"parse":"在fun函数中定义了指针p，首先把ps地址赋给p，再通过while循环移动p指针，直到字符串末尾，然后函数返回p和ps的差值，即字符串长度。故选A"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nint i, j \u003d 0;\nchar a[] \u003d \"How are you!\", b[10] \u003d { 0 };\nfor ( i \u003d 0; a[i]; i++ )\n if ( a[i] \u003d\u003d \u0027 \u0027 )\n  b[j++] \u003d a[i-1];\nprintf(\"%s\\n\", b);\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"we","index":0,"selected":false},{"title":"Howareyou!","index":1,"selected":false},{"title":"ay","index":2,"selected":false},{"title":"we!","index":3,"selected":false}],"mode":0,"answer":0,"parse":"for语句循环体执行功能是，每次当a[i]元素为\u0027 \u0027时，自动将a[i]上一个单元内容赋值给b[j]，赋值完成后，j值加1，因此a[i]的\u0027w\u0027和\u0027e\u0027分别赋值给b[0]，b[1]。故选A"},{"title":"以下叙述错误的是（ ）。","chooseList":[{"title":"未经赋值的全局变量值不确定","index":0,"selected":false},{"title":"未经赋值的auto变量值不确定","index":1,"selected":false},{"title":"未经赋值的register变量值不确定","index":2,"selected":false},{"title":"未经赋值的静态局部变量值为0","index":3,"selected":false}],"mode":0,"answer":0,"parse":"C语言中，系统将未经赋初值的全局变量设置为0。故选A"}]}