{"code":0,"msg":"success","data":[{"title":"逻辑模型是面向数据库系统的模型，下面属于逻辑模型的是（ ）。","chooseList":[{"title":"关系模型","index":0,"selected":false},{"title":"谓词模型","index":1,"selected":false},{"title":"物理模型","index":2,"selected":false},{"title":"实体-联系模型","index":3,"selected":false}],"mode":0,"answer":0,"parse":"逻辑数据模型也称数据模型，是面向数据库系统的模型，着重于在数据库系统一级的实现。成熟并大量使用的数据模型有层次模型、网状模型、关系模型和面向对象模型等。故选A"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\nint main() {\nchar a[20] \u003d \"ab\", b[20] \u003d \"cdef\";\nint k \u003d 0;\nstrcat(a, b);\nwhile ( a[k] !\u003d \u0027\\0\u0027 ) {\nb[k] \u003d a[k]; k++;\n}\nputs(b);\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"abcdef","index":0,"selected":false},{"title":"cbcdef","index":1,"selected":false},{"title":"cdef","index":2,"selected":false},{"title":"ab","index":3,"selected":false}],"mode":0,"answer":0,"parse":"strcat(字符串1，字符串2)函数是把字符串2连接到字符串1的后面，最终结果存放到字符数组1中，因此本题把a，b字符串连接起来放在a数组中，while语句完成功能是再将a字符串赋给b字符串。故选A"},{"title":"某二叉树中有15个度为1的结点，16个度为2的结点，则该二叉树中总的结点数为（ ）。","chooseList":[{"title":"32","index":0,"selected":false},{"title":"46","index":1,"selected":false},{"title":"48","index":2,"selected":false},{"title":"49","index":3,"selected":false}],"mode":0,"answer":2,"parse":"在树结构中，一个结点所拥有的后继个数称为该结点的度，所有结点中最大的度称为树的度。对任何一棵二叉树，度为0的结点（即叶子结点）总是比度为2的结点多一个。由16个度为2的结点可知叶子结点个数为17，则结点结点总数为16+17+15\u003d48。故选C"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nint i, *ptr;\nint a[4] \u003d { 1, 1, 3, 4 };\nfor ( ptr \u003d a, i \u003d 0; i \u003c 3; i++ ) printf(\"%d,\", *ptr++);\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"1,2,4,","index":0,"selected":false},{"title":"1,3,4,","index":1,"selected":false},{"title":"1,1,3,","index":2,"selected":false},{"title":"1,4,3,","index":3,"selected":false}],"mode":0,"answer":2,"parse":"for语句中把a数组首地址赋给ptr，然后再在循环体中输出，再把ptr对应的地址值加1，重复三次，输出数组前三个数：1,1,3。故选C"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nint i \u003d 4;\nfor ( printf(\"%d\", i); i \u003c 2; i++ )\nprintf(\"%d\", i);\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"12","index":0,"selected":false},{"title":"4","index":1,"selected":false},{"title":"1","index":2,"selected":false},{"title":"0","index":3,"selected":false}],"mode":0,"answer":1,"parse":"for ( printf(\"%d\", i); i \u003c 2; i++ ) 先输出i，由于i\u003d4，不满足条件结束循环。故选B"},{"title":"堆排序最坏情况下的时间复杂度为（ ）。","chooseList":[{"title":"O(n^15)","index":0,"selected":false},{"title":"O(nlog2n)","index":1,"selected":false},{"title":"O(n(n-1)/2)","index":2,"selected":false},{"title":"O(log2n)","index":3,"selected":false}],"mode":0,"answer":1,"parse":"堆排序属于选择类的排序方法，最坏情况时间复杂度为O(nlog2n)。故选B"},{"title":"若已有定义语句：int a,b,c;，且变量已正确赋初值，则以下选项中正确的赋值表达式是（ ）。","chooseList":[{"title":"a\u003d(b\u003dc)+8;","index":0,"selected":false},{"title":"(a\u003db)\u003dc\u003d9;","index":1,"selected":false},{"title":"a\u003d(b\u003d\u003dc)\u003d\u0027A\u0027;","index":2,"selected":false},{"title":"a+b\u003dc+1;","index":3,"selected":false}],"mode":0,"answer":0,"parse":"赋值运算符左边必须是一个变量，B、D错误；C选项中，（b\u003d\u003dc）是个表达式，值为1，\u0027A\u0027不能赋值给1，C错误。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nstruct person {\nchar name[10];\nint age;\n};\nint main() {\nstruct person room[2] \u003d {{\"Wang\", 19}, {\"Li\",20}};\nprintf(\"%s:%d\\n\",(room+1)-\u003ename,room-\u003eage);\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"Li:19","index":0,"selected":false},{"title":"Wang:19","index":1,"selected":false},{"title":"Li:20","index":2,"selected":false},{"title":"Wang:17","index":3,"selected":false}],"mode":0,"answer":0,"parse":"声明结构类型person后，在main函数中定义了一个结构数组room，其中有2个元素，每个元素都是person类型数据。在输出中，利用（room指针地址+1）指向room数组中第二个元素，并将该元素的name信息进行输出，同理，对第一个元素中的age信息输出。故选A"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint k \u003d 5;\nvoid f(int *s) {\ns \u003d \u0026k;\n*s \u003d 7;\n}\nint main() {\nint m \u003d 3;\nf(\u0026m);\nprintf(\"%d,%d\\n\", m, k);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"3,5","index":0,"selected":false},{"title":"7,7","index":1,"selected":false},{"title":"5,7","index":2,"selected":false},{"title":"3,7","index":3,"selected":false}],"mode":0,"answer":3,"parse":"函数f的功能是定义一个整型的指针变量s，指向全局变量k，然后修改s指向地址中的值为7，因此函数f只是修改全局变量k的值为7，与main函数中临时变量m无关，因此最后输出3,7。故选D"},{"title":"若有定义\ntypedef int *T;\nT a[20];\n则以下与上述定义中a类型完全相同的是（ ）。","chooseList":[{"title":"int *a[20];","index":0,"selected":false},{"title":"int (*a)[20];","index":1,"selected":false},{"title":"int a[20];","index":2,"selected":false},{"title":"int **a[20];","index":3,"selected":false}],"mode":0,"answer":0,"parse":"“typedef 类型名 新类型名”表示为一个已有定义的类型标识符重新定义一个类型名，题中选项A代表的意思是数组指针，即指向数组的指针，B选项是指针数组，即数组存放的元素是整型指针，首先为整型指针类型命名为T，再通过T定义了一个整形指针数组*a[20]，等价于int *a[20]。故选A"},{"title":"有如下程序段\nint k;\nfor ( k \u003d 2; k \u003d\u003d 0; )\nprintf(\"%d\", k--);\n则for循环体执行的次数是（ ）。","chooseList":[{"title":"0","index":0,"selected":false},{"title":"1","index":1,"selected":false},{"title":"2","index":2,"selected":false},{"title":"无限次","index":3,"selected":false}],"mode":0,"answer":0,"parse":"for ( k \u003d 2; k \u003d\u003d 0 ; )表示给k赋值2，如果等于0，则进入循环，但是k不满足条件，因此循环体不执行。故选A"},{"title":"下列叙述中正确的是（ ）。","chooseList":[{"title":"每一个结点有两个指针域的链表一定是非线性结构","index":0,"selected":false},{"title":"所有结点的指针域都为非空的链表一定是非线性结构","index":1,"selected":false},{"title":"循环链表是循环队列的链式存储结构","index":2,"selected":false},{"title":"线性结构的存储结点也可以有多个指针","index":3,"selected":false}],"mode":0,"answer":3,"parse":"一个非空的数据结构如果满足以下两个条件：有且只有一个根结点；每一个结点最多有一个前驱，也最多有一个后继，则称为线性结构，在数据结构中习惯称为线性表。双向链表结点具有两个指针域，属于线性结构，A错误；循环链表所有结点的指针域都为非空，属于线性结构，B错误；循环链表是链表，循环队列属于队列，队列只能在队尾入队，在排头退队，链表可以在任何位置进行增删查改操作，C错误；双向链表结点具有多个指针域，D正确。故选D"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nif ( \u0027\\0\u0027 \u003d\u003d 0 ) putchar(\u00271\u0027);\nif ( \u0027\\0\u0027 ) putchar(\u00272\u0027);\nif ( \u0027a\u0027 \u003e \u0027b\u0027 ) putchar(\u00273\u0027);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"1","index":0,"selected":false},{"title":"123","index":1,"selected":false},{"title":"23","index":2,"selected":false},{"title":"3","index":3,"selected":false}],"mode":0,"answer":0,"parse":"\u0027\\0\u0027是转义字符，表示空字符，故\u0027\\0\u0027\u003d\u003d0成立，输出1；\u0027\\0\u0027是字符常量和0不等；\u0027a\u0027\u003e\u0027b\u0027永远不成立。故选A"},{"title":"设有表示公司和员工及雇佣的三张表，员工可在多家公司兼职，其中公司C（公司号，公司名，地址，注册资本，法人代表，员工数），员工S（员工号，姓名，性别，年龄，学历），雇佣E（公司号，员工号，工资，工作起始时间）。其中表C的键为公司号，表S的键为员工号，则表E的键（码）为（ ）。","chooseList":[{"title":"公司号，员工号","index":0,"selected":false},{"title":"员工号，工资","index":1,"selected":false},{"title":"员工号","index":2,"selected":false},{"title":"公司号，员工号，工资","index":3,"selected":false}],"mode":0,"answer":0,"parse":"二维表中的行称为元组，候选键（码）是二维表中能唯一标识元组的最小属性集。若一个二维表有多个候选码，则选定其中一个作为主键（码）供用户使用。公司号唯一标识公司，员工号唯一标识员工，而雇佣需要公司号和员工号同时唯一标识，故表E的键（码）为（公司号，员工号）。故选A"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\ntypedef struct stu {\nchar name[10];\nchar gender;\nint score;\n} STU;\nvoid f(STU a, STU *b) {\n*b \u003d a;\nprintf(\"%s,%c,%d,\", b-\u003ename, b-\u003egender, b-\u003escore);\n}\nint main() {\nSTU a \u003d { \"Zhao\", \u0027m\u0027, 290 };\nSTU b \u003d { \"Qian\", \u0027f\u0027, 350 };\nf(a, \u0026b);\nprintf(\"%s,%c,%d\\n\", b.name, b.gender, b.score);\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"Zhao,m,290,Qian,f,350","index":0,"selected":false},{"title":"Qian,m,290,Zhao,m,290","index":1,"selected":false},{"title":"Qian,f,350,Qian,f,350","index":2,"selected":false},{"title":"Zhao,m,290,Zhao,m,290","index":3,"selected":false}],"mode":0,"answer":3,"parse":"本题定义了一个结构变量struct stu，并且命名为STU，STU结构中包含三个数据。main函数中，首先为结构变量a，b初始化，再调用函数f，在f函数中，使用结构体变量a对指针b指向的结构体进行赋值，使得指针b指向的结构体成员依次赋值为结构体a的成员，然后依次输出指针b指向的结构体成员的值；由于f函数形参b为指针，所以指针b指向的值被修改为a的同时，main函数中的实参b的值也被修改成a。故选D"},{"title":"算法应当具有的特性不包括（ ）。","chooseList":[{"title":"可行性","index":0,"selected":false},{"title":"有穷性","index":1,"selected":false},{"title":"确定性","index":2,"selected":false},{"title":"美观性","index":3,"selected":false}],"mode":0,"answer":3,"parse":"一个算法应该具有以下五个重要的特征：有穷性，确定性，输入输出以及可行性。故选D"},{"title":"某二叉树的前序序列为ABCD，中序序列为DCBA，则后序序列为（ ）。","chooseList":[{"title":"BADC","index":0,"selected":false},{"title":"DCBA","index":1,"selected":false},{"title":"CDAB","index":2,"selected":false},{"title":"ABCD","index":3,"selected":false}],"mode":0,"answer":1,"parse":"根据题意可以得知D为根结点，ABC为左侧结点，C为D左子结点，A为B子结点，故后序序列为DCBA，故选B"},{"title":"下列不能作为软件设计工具的是（ ）。","chooseList":[{"title":"PAD图","index":0,"selected":false},{"title":"程序流程图","index":1,"selected":false},{"title":"数据流程图（DFD图）","index":2,"selected":false},{"title":"总体结构图","index":3,"selected":false}],"mode":0,"answer":2,"parse":"软件设计常用的工具有：图形工具、表格工具和语言工具。其中图形工具包括：程序流程图、N-S图、PAD图和HIPO；表格工具包括：判断表；语言工具包括“PDL（伪码）。另外在结构化设计方法中，常用的结构设计工具是结构图，故选C"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nvoid fun(int a[], int n) {\nint i;\nfor ( i \u003d 0; i \u003c n; i++ ) {\nif ( i % 3 \u003d\u003d 0 ) a[j] -\u003d n;\nelse a[i] +\u003d n;\n}\n}\nint main() {\nint c[5] \u003d { 6, 7, 8, 9, 10 }, i;\nfun(c, 5);\nfor ( i \u003d 0; i \u003c 5; i++ ) printf(\"%d,\", c[i]);\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"1,12,13,4,15,","index":0,"selected":false},{"title":"10,9,8,7,6,","index":1,"selected":false},{"title":"1,7,13,9,15,","index":2,"selected":false},{"title":"10,12,8,4,6,","index":3,"selected":false}],"mode":0,"answer":0,"parse":"fun函数功能是：数组中，下标对3求余为0的元素减5，下标对3求余不为0的元素累加5，所以执行完fun函数后，数组c变为1,12,13,4,15。故选A"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nchar b[4][10], c;\nint i, j;\nfor ( i \u003d 0; i \u003c 4; i++ ) {\nj \u003d 0;\nwhile ( (c \u003d getchar()) !\u003d \u0027 \u0027 \u0026\u0026 c !\u003d \u0027\\n\u0027 )\nb[i][j++] \u003d c;\nb[i][j] \u003d \u0027\\0\u0027;\n}\nprintf(\"%s%s%s%s\\n\", b[0], b[1], b[2], b[3]);\nreturn 0;\n}\n程序运行时从第一列开始输入\nPeach flower is pink.\u003cCR\u003e则输出结果是（ ）。","chooseList":[{"title":"Peachflowerispink.","index":0,"selected":false},{"title":"Peachfloweris pink.","index":1,"selected":false},{"title":"Peachflower is pink.","index":2,"selected":false},{"title":"Peach flower is pink.","index":3,"selected":false}],"mode":0,"answer":0,"parse":"for循环中，通过执行while语句，把输入的字符串以\u0027 \u0027为分隔符，分别保存在b二维数组的4行中，再通过%s格式化输出，注意输出语句没有空格，所以输出的字符串也没有空格。故选A"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nint x[] \u003d {8,2,6,12,5,15}, f1, f2;\nint *p \u003d x;\nf1 \u003d f2 \u003d x[0];\nfor ( ; p \u003c\u003d x+5; p++ ) {\nif ( f1 \u003c *p ) f1 \u003d *p;\nif ( f2 \u003e *p ) f2 \u003d *p;\n}\nprintf(\"%d,%d\\n\", f1, f2);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"15,2","index":0,"selected":false},{"title":"15,15","index":1,"selected":false},{"title":"2,15","index":2,"selected":false},{"title":"8,8","index":3,"selected":false}],"mode":0,"answer":0,"parse":"本题的用意是求数组的最大值和最小值，首先把数组x首地址的值赋给指针p，故*p初始值为8，而p是地址值，p+1相当于数组中下一元素的地址，在for循环，是求数组x对应的最大值和最小值，f1为最大值，f2为最小值。因此输出为15,2。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nvoid convert(char ch) {\nif ( ch \u003c \u0027X\u0027 ) convert(ch+1);\nprintf(\"%c\", ch);\n}\nint main() {\nconvert(\u0027W\u0027);\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"YZ","index":0,"selected":false},{"title":"VW","index":1,"selected":false},{"title":"XY","index":2,"selected":false},{"title":"XW","index":3,"selected":false}],"mode":0,"answer":3,"parse":"在main函数中，执行convert(\u0027W\u0027)，因为\u0027W\u0027比\u0027X\u0027小，满足if语句，再执行convert(ch+1)；此时ch\u003d\u0027X\u0027，不满足条件，输出X，完成后，返回上一层convert中，输出上一次ch\u003d\u0027W\u0027。故选D"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nstruct S {\nint x, y;\n};\nint main() {\nstruct S data[3] \u003d { 4, 3, 2, 0, 8, 1 };\nint i;\nfor ( i \u003d 0; i \u003c 3; i++ ) printf(\"%d%d;\", data[i].x, data[i].y \u003e\u003e 1);\nprintf(\"\\n\");\nreturn 0;\n}\n程序的运行结果是（ ）。","chooseList":[{"title":"41;20;80;","index":0,"selected":false},{"title":"41;22;64;","index":1,"selected":false},{"title":"40;21;80;","index":2,"selected":false},{"title":"43;20;81;","index":3,"selected":false}],"mode":0,"answer":0,"parse":"声明结构类型S中有两个整型变量x，y，在main函数中，为S结构类型定义一个数组变量data初始化3个结构体元素，分别两两赋值给结构体中的x，y。在for循环中，对3个结构体元素y值转换成二进制数后右移一位，再对此时x，y值依次进行输出。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint main() {\nint i, data;\nscanf(\"%d\", \u0026data);\nfor ( i \u003d 0; i \u003c 10; i++ ) {\nif ( i \u003e data ) break;\nprintf(\"%d,\", i);\n}\nreturn 0;\n}\n若程序运行时输入：3\u003cCR\u003e，则输出结果是（ ）。","chooseList":[{"title":"3,4,5,","index":0,"selected":false},{"title":"1,2,3,","index":1,"selected":false},{"title":"2,3,4,","index":2,"selected":false},{"title":"0,1,2,3,","index":3,"selected":false}],"mode":0,"answer":3,"parse":"从键盘上输入“3”，此时data\u003d3。进入for语句，执行if语句，如果i大于data则结束循环，否则继续往下执行，0、1、2、3、均不大于3，所以输出D选项内容。故选D"},{"title":"以下叙述正确的是（ ）。","chooseList":[{"title":"文件指针是指针类型的变量","index":0,"selected":false},{"title":"文件指针变量的值是文件的当前读取位置","index":1,"selected":false},{"title":"文件指针的值是文件在计算机磁盘中的路径信息","index":2,"selected":false},{"title":"调用fscanf函数能向所有类型的文件中写入任意字符","index":3,"selected":false}],"mode":0,"answer":0,"parse":"文件指针指向的是文件缓冲区，而不是文件本身位置，B错误；文件指针是指针变量，存储的文件缓存区首地址，而不是文件在计算机磁盘中的路径信息，C错误；fscanf函数作用是从指定的文件中格式化读数据，读取数据类型由格式控制符决定，D错误。故选A"},{"title":"下面对软件特点描述错误的是（ ）。","chooseList":[{"title":"软件没有明显的制作过程","index":0,"selected":false},{"title":"软件是一种逻辑实体，不是物理实体，具有抽象性","index":1,"selected":false},{"title":"软件的开发、运行对计算机系统具有依赖性","index":2,"selected":false},{"title":"软件在使用中存在磨损、老化问题","index":3,"selected":false}],"mode":0,"answer":3,"parse":"软件具有以下特点：软件是一种逻辑实体，具有抽象性；软件没有明显的制作过程；软件在使用期间不存在磨损、老化问题；对硬件和环境具有依赖性；软件复杂性高，成本昂贵；软件开发涉及诸多的社会因素。故选D"},{"title":"以下关于宏的叙述错误的是（ ）。","chooseList":[{"title":"宏替换不具有计算功能","index":0,"selected":false},{"title":"宏替换不具有类型","index":1,"selected":false},{"title":"宏名必须用大写字母构成","index":2,"selected":false},{"title":"宏替换不占用运行时间","index":3,"selected":false}],"mode":0,"answer":2,"parse":"宏名习惯采用大写字母，以便与一般变量区别，但是并没有规定一定要用大写字母。故选C"},{"title":"运动会中一个运动项目可以有多名运动员参加，一个运动员可以参加多个项目。则实体项目和运动员之间的联系是（ ）。","chooseList":[{"title":"多对多","index":0,"selected":false},{"title":"一对多","index":1,"selected":false},{"title":"多对一","index":2,"selected":false},{"title":"一对一","index":3,"selected":false}],"mode":0,"answer":0,"parse":"一个运动项目有很多运动员参加，而一个运动员可以参加多项运动项目，这是多对多关系。故选A"},{"title":"下面叙述正确的是（ ）。","chooseList":[{"title":"C语言程序的语句经过编译和链接转换成二进制机器指令后才能执行","index":0,"selected":false},{"title":"任何算法需要包含三种基本结构中的两种以上","index":1,"selected":false},{"title":"复杂算法是不能用三种基本结构来表达的","index":2,"selected":false},{"title":"只要是简单算法，它的操作步骤都不会超过20步","index":3,"selected":false}],"mode":0,"answer":0,"parse":"算法共有三种逻辑结构：顺序结构、条件结构和循环结构，一个算法可以含有这三种逻辑结构的任意组合，B错误；复杂算法可以用三种基本结构表达，C错误；简单算法操作步骤不超过5步，D错误。故选A"},{"title":"使用白盒测试方法时，设计测试用例应根据（ ）。","chooseList":[{"title":"程序的内部逻辑","index":0,"selected":false},{"title":"程序的复杂结构","index":1,"selected":false},{"title":"程序的功能","index":2,"selected":false},{"title":"使用说明书","index":3,"selected":false}],"mode":0,"answer":0,"parse":"白盒测试又称为结构测试或逻辑驱动测试，它允许测试人员利用程序内部的逻辑结构及有关信息来设计或选择测试用例，对程序所有的逻辑路径进行测试，A正确。故选A"},{"title":"以下表达式的值与x无关、其值恒为真的是（ ）。","chooseList":[{"title":"0\u003cx\u003c5","index":0,"selected":false},{"title":"x\u003e10\u0026\u0026x\u003c5","index":1,"selected":false},{"title":"x\u003e10||x\u003c5","index":2,"selected":false},{"title":"x\u003c10\u0026\u0026x\u003e5","index":3,"selected":false}],"mode":0,"answer":0,"parse":"逻辑与只有在“\u0026\u0026”符号两边操作均为真时结果才为真，排除B，D；逻辑或当且只当“||”符号两边至少有一个为真是结果才为真，C选项中的结果与x的值有关，C错误。故选A"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint main() {\nint x[3][4] \u003d { 1, 3, 5, 7, 9, 11, 2, 4, 6, 8, 10, 12 };\nint (*p)[4] \u003d x, k \u003d 1, m, n \u003d 0;\nfor ( m \u003d 0; m \u003c 2; m++ ) n +\u003d *(*(p+m)+k);\nprintf(\"%d\\n\", n);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"10","index":0,"selected":false},{"title":"20","index":1,"selected":false},{"title":"14","index":2,"selected":false},{"title":"16","index":3,"selected":false}],"mode":0,"answer":2,"parse":"*(*(p+m)+k)系统默认为指针指向数组中第[m][k]个元素，因此，在for循环中，n+\u003d*(*(p+m)+k);执行的是将数组x[0][1]和x[1][1]累加赋值给n，最后输出。故选C"},{"title":"以下选项中，合法的C语言常量是（ ）。","chooseList":[{"title":"21.84","index":0,"selected":false},{"title":"\u0027CPP\u0027","index":1,"selected":false},{"title":"\"1.0","index":2,"selected":false},{"title":"2MB","index":3,"selected":false}],"mode":0,"answer":0,"parse":"21.84是典型的浮点型数据（double，后面根f的是float），A正确。故选A"},{"title":"以下关于编译预处理的叙述中错误的是（ ）。","chooseList":[{"title":"预处理命令行必须位于源程序的开始","index":0,"selected":false},{"title":"源程序中凡是以#开始的控制行都是预处理命令行","index":1,"selected":false},{"title":"一行上只能有一条有效的预处理命令","index":2,"selected":false},{"title":"预处理命令是在程序正式编译之前被处理的","index":3,"selected":false}],"mode":0,"answer":0,"parse":"通常，预处理命令位于源文件的开头，也可以写在函数与函数之间。故选A"},{"title":"下列叙述中正确的是（ ）。","chooseList":[{"title":"结点中具有两个指针域的链表一定是二叉链表","index":0,"selected":false},{"title":"结点中具有两个指针域的链表可以是线性结构，也可以是非线性结构","index":1,"selected":false},{"title":"二叉树只能采用链式存储结构","index":2,"selected":false},{"title":"循环链表是非线性结构","index":3,"selected":false}],"mode":0,"answer":1,"parse":"具有两个指针域的链表可能是双向链表，A错误；双向链表是线性结构，二叉树为非线性结构，二者结点中均有两个指针域，B正确；二叉树通常采用链式存储结构，也可以采用其他结构，C错误；循环链表是线性结构，D错误。故选B"},{"title":"若想给已定义为int型的变量a、b、c和d赋整数1，以下选项中错误的语句是（ ）。","chooseList":[{"title":"d\u003dc,c\u003db,b\u003da,a\u003d1;","index":0,"selected":false},{"title":"d\u003dc\u003db\u003da\u003d1","index":1,"selected":false},{"title":"d\u003d(b\u003dc\u003d(a\u003d1));","index":2,"selected":false},{"title":"d\u003d1,c\u003dd,b\u003dc,a\u003db;","index":3,"selected":false}],"mode":0,"answer":0,"parse":"赋值是将一个常量的赋值给一个变量，在A选项中，c初始值未定义，不满足题目要求。故选A"},{"title":"以下使指针指向一个字符串的选项错误的是（ ）。","chooseList":[{"title":"char str[] \u003d \"string\", *ps;\n*ps \u003d str;","index":0,"selected":false},{"title":"char *str \u003d \"string\", *ps;\nps \u003d \u0026*str;","index":1,"selected":false},{"title":"char str[] \u003d \"string\", *ps;\nps \u003d str;","index":2,"selected":false},{"title":"char *ps;\nps \u003d \"string\";","index":3,"selected":false}],"mode":0,"answer":0,"parse":"A选项中定义了指针ps后，*ps表示指针ps指向的地址的内容，而不是地址，*ps \u003d str无法将str的首地址赋给一个常量，语法错误。故选A"},{"title":"若有定义：int a \u003d 0, b \u003d 0, c \u003d 0, d \u003d 0;，以下关于C语言表达式\n( ++a || ++b ) ? ++c : ++d 执行顺序的叙述正确的是（ ）。","chooseList":[{"title":"先执行++a，再执行++b，再执行++c","index":0,"selected":false},{"title":"先执行++a，再执行++c","index":1,"selected":false},{"title":"先执行++b，再执行++a，再执行++d","index":2,"selected":false},{"title":"先执行++b，再执行++d","index":3,"selected":false}],"mode":0,"answer":1,"parse":"表达式从左往右结合，故先执行++a，“||”左边为1不用再判断右边，所以不执行++b，直接执行++c。故选B"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\nint sub(double a, double b) {\nreturn (int)(a - b - 1.3);\n}\nint main() {\nprintf(\"%d\\n\", sub(3.2, 4.1));\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"-2","index":0,"selected":false},{"title":"1.7","index":1,"selected":false},{"title":"-3","index":2,"selected":false},{"title":"2.0","index":3,"selected":false}],"mode":0,"answer":0,"parse":"sub函数输出(int)(a-b-1.3)将结果强制转化为整型，因此可以排除B、D选项，sub(3.2, 4.1)\u003d-2。故选A"},{"title":"以下非法的字符常量是（ ）。","chooseList":[{"title":"\u0027\\n\u0027","index":0,"selected":false},{"title":"\u0027\\101\u0027","index":1,"selected":false},{"title":"\u0027\\x21\u0027","index":2,"selected":false},{"title":"\u0027\\0\u0027","index":3,"selected":false}],"mode":0,"answer":0,"parse":"C语言允许使用一种以特殊形式出现的字符常量，使用\u0027\\n\u0027来表示换行，“\\n”实际上是一个字符，它的ASCII码值为10，不存在\u0027\\n\u0027用法。故选A"}]}