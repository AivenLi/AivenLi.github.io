{"code":0,"msg":"success","data":[{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint main() {\nint i, data;\nscanf(\"%d\", \u0026data);\nfor ( i \u003d 0; i \u003c 5; i++ ) {\nif ( i \u003c data ) continue;\nprintf(\"%d,\", i);\n}\nreturn 0;\n}\n程序运行时，从键盘输入：3\u003cCR\u003e后，程序输出结果为（ ）。","chooseList":[{"title":"3,4,","index":0,"selected":false},{"title":"1,2,3,4,","index":1,"selected":false},{"title":"0,1,2,3,4,5,","index":2,"selected":false},{"title":"0,1,2,","index":3,"selected":false}],"mode":0,"answer":0,"parse":"continue语句是结束本次循环。本题中输入3，即data\u003d3，1和2均小于3，所以不输出，而3和4均不小于3，所以输出，故选A"},{"title":"以下选项中，合法的C语言常量是（ ）。","chooseList":[{"title":"1.234","index":0,"selected":false},{"title":"\u0027C++\u0027","index":1,"selected":false},{"title":"\"\\2.0","index":2,"selected":false},{"title":"2Kb","index":3,"selected":false}],"mode":0,"answer":0,"parse":"B选项应该用\"\"括起来而不是\u0027\u0027；C选项后面少了\"；2Kb并不是常量；故选A"},{"title":"以下选项中叙述正确的是（ ）。","chooseList":[{"title":"文件指针是指针类型的变量","index":0,"selected":false},{"title":"文件指针可同时指向不同文件","index":1,"selected":false},{"title":"文件指针的值是文件在计算机磁盘中的路径信息","index":2,"selected":false},{"title":"调用scanf函数可以向文本文件中写入任意字符","index":3,"selected":false}],"mode":0,"answer":0,"parse":"所谓文件指针，实际上是指向一个结构体类型的指针变量，这个结构体中包含有文件的一些信息，如缓冲区的地址，在缓冲区中当前存取的字符的位置，对文件是“读”还是“写”，是否出错，是否已经遇到文件结束标志等信息。文件指针本身是指针类型的变量，A正确。一个指针在同一时间只能指向一个文件，B错误。文件指针是指针变量，存储的文件缓存区首地址，而不是文件在计算机磁盘中的路径信息，C错误。fscanf函数从文本文件中按格式读入到程序中，而不是向文本文件中写入数据，D错误。故选A"},{"title":"以下选项中叙述正确的是（ ）。","chooseList":[{"title":"结构化程序的三种基本结构是循环结构、选择结构和顺序结构","index":0,"selected":false},{"title":"C语言源程序不编译也能直接运行","index":1,"selected":false},{"title":"使用N-S流程图不能描述复杂算法","index":2,"selected":false},{"title":"计算机能够直接运行C语言源程序，不必进行任何转换","index":3,"selected":false}],"mode":0,"answer":0,"parse":""},{"title":"设有关系表学生S（学号，姓名，性别，年龄，身份证号），每个学生学号唯一。除属性学号外，也可以作为键的是（ ）。","chooseList":[{"title":"姓名","index":0,"selected":false},{"title":"身份证号","index":1,"selected":false},{"title":"姓名，性别，年龄","index":2,"selected":false},{"title":"学号，姓名","index":3,"selected":false}],"mode":0,"answer":1,"parse":"候选键是二维表中能唯一表示元组的最小属性集。一个二维表有多个候选码，则选定其中一个作为主键供用户使用。学生学号与身份证号均是唯一的，都可以作为主键，故选B"},{"title":"通常软件测试实施的步骤是（ ）。","chooseList":[{"title":"集成测试、单元测试、确认测试","index":0,"selected":false},{"title":"单元测试、集成测试、确认测试","index":1,"selected":false},{"title":"确认测试、集成测试、单元测试","index":2,"selected":false},{"title":"单元测试、确认测试、集成测试","index":3,"selected":false}],"mode":0,"answer":1,"parse":"软件测试的实施过程主要有4个步骤：单元测试、集成测试、确认测试（验收测试）和系统测试。故选B"},{"title":"以下选项中的宏定义正确的是（ ）。","chooseList":[{"title":"#define PI 3.14","index":0,"selected":false},{"title":"##define eps 0.001","index":1,"selected":false},{"title":"#DEFINE TRUE","index":2,"selected":false},{"title":"#define int INT","index":3,"selected":false}],"mode":0,"answer":0,"parse":"宏定义只以一个#开头，B错误；宏定义的格式是“#define MACRO_NAME MACRO_VALUE”，C错误；关键字不能作为宏名，D错误。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\nint main() {\nchar a[] \u003d \"THIS\", *b \u003d \"OK\";\nprintf(\"%d,%d,%d,%d\\n\", strlen(a), sizeof(a),\nstrlen(b), sizeof(b));\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"4,5,2,4","index":0,"selected":false},{"title":"4,4,2,1","index":1,"selected":false},{"title":"5,5,3,3","index":2,"selected":false},{"title":"4,5,2,3","index":3,"selected":false}],"mode":0,"answer":0,"parse":"数组a的长度为4，所以strlen(a)返回4，排除C选项；sizeof(a)测的是数组a占用的内存大小，因为字符串后面还有一个\u0027\\0\u0027，所以结果为5，排除B选项；strlen(b)的返回值为2，由于b是一个指针，所以sizeof(b)的结果为4。故选A\n扩展：不管任何类型的指针都只占用4字节，所以sizeof(指针变量名)的结果都是4。"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint main() {\nint i, data;\nscanf(\"%d\", \u0026data);\nfor ( i \u003d 0; i \u003c 5; i++ ) {\nif ( i \u003e data ) break;\nprintf(\"%d\", i);\n}\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行时，从键盘输入：3\u003cCR\u003e后，程序输出结果为（ ）。","chooseList":[{"title":"3,4,","index":0,"selected":false},{"title":"0,1,","index":1,"selected":false},{"title":"3,4,5,","index":2,"selected":false},{"title":"0,1,2,3,","index":3,"selected":false}],"mode":0,"answer":3,"parse":"break是结束整个循环。0,1,2,3,均不大于3，所以输出，4大于3退出循环，故选D"},{"title":"在数据库系统中，考虑数据库实现的数据模型是（ ）。","chooseList":[{"title":"概念数据模型","index":0,"selected":false},{"title":"逻辑数据模型","index":1,"selected":false},{"title":"物理数据模型","index":2,"selected":false},{"title":"关系数据模型","index":3,"selected":false}],"mode":0,"answer":1,"parse":"数据模型按照不同的应用层次分为以下3种类型：概念数据模型，它是一种面向客观世界、面向用户的模型，它与具体的数据库管理系统和具体的计算机平台无关；逻辑数据模型，是面向数据库系统的模型，着重于在数据库系统一级的实现；物理数据模型，是面向计算机物理实现的模型，次模型给出了数据模型在计算机上物理结构的表示。故选B"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint sum(int data) {\nstatic int init \u003d 0;\nreturn init +\u003d data;\n}\nint main() {\nint i;\nfor ( i \u003d 0; i \u003c\u003d 5; i++ ) printf(\"%d,\",sum(i));\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"1,3,6,10,15,","index":0,"selected":false},{"title":"1,2,3,4,5,","index":1,"selected":false},{"title":"0,0,0,0,0,","index":2,"selected":false},{"title":"1,1,1,1,1,","index":3,"selected":false}],"mode":0,"answer":0,"parse":"static修饰的变量的会一直存在，即使函数调用结束，该变量的值是上一次函数调用结束时的值，根据main函数的for循环可以推出输出结果和A的结果一样。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\nint main() {\nprintf(\"%d\\n\", strlen(\"0\\n011\\1\"));\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"6","index":0,"selected":false},{"title":"8","index":1,"selected":false},{"title":"9","index":2,"selected":false},{"title":"4","index":3,"selected":false}],"mode":0,"answer":0,"parse":"由一对双引号括起来的一串字符为字符串。字符常量是用一对单引号括起来的单个字符，还有一些特殊字符常量，即以“\\”开头的转义字符。“\\”后可以为某些单个字符也可以为八进制或十六进制数字。strlen函数统计字符串长度，遇到“\\0”统计结束。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nvoid convert(char ch) {\nif ( ch \u003c \u0027D\u0027 ) convert(ch+1);\nprintf(\"%c\", ch);\n}\nint main() {\nconvert(\u0027A\u0027); printf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"ABCDDCBA","index":0,"selected":false},{"title":"ABCD","index":1,"selected":false},{"title":"A","index":2,"selected":false},{"title":"DCBA","index":3,"selected":false}],"mode":0,"answer":3,"parse":"本题考查函数的递归调用。结束递归调用的条件是ch\u003e\u003d\u0027D\u0027，递归结束之后才开始输出，所以输出的结果是DCBA。故选D"},{"title":"下列叙述中正确的是（ ）。","chooseList":[{"title":"循环队列属于队列的链式存储结构","index":0,"selected":false},{"title":"双向链表是二叉树的链式存储结构","index":1,"selected":false},{"title":"非线性结构只能采用链式存储结构","index":2,"selected":false},{"title":"有的非线性结构也可以采用顺序存储结构","index":3,"selected":false}],"mode":0,"answer":3,"parse":"循环队列是队列的一种顺序存储结构，A错误；双向链表为顺序存储结构，二叉树通常采用链式存储结构，B错误；完全二叉树是属于非线性结构，但其最佳存储方式是顺序存储方式，C错误。故选D"},{"title":"以下选项中叙述正确的是（ ）。","chooseList":[{"title":"使用三种基本结构就可以实现任何复杂算法","index":0,"selected":false},{"title":"只要程序包含了三种基本结构中的任意一种，就是结构化程序","index":1,"selected":false},{"title":"程序语法错误要在运行时才能发现","index":2,"selected":false},{"title":"C语言程序不需要包含main函数","index":3,"selected":false}],"mode":0,"answer":0,"parse":""},{"title":"以下选项中，合法的C语言实数是（ ）。","chooseList":[{"title":"3.1e0.4","index":0,"selected":false},{"title":"02e0","index":1,"selected":false},{"title":"E13","index":2,"selected":false},{"title":"7.12E","index":3,"selected":false}],"mode":0,"answer":1,"parse":"e前必须有数字，e后必须为整数，故选B"},{"title":"以下选项中叙述正确的是（ ）。","chooseList":[{"title":"char c1, c2, *c3, c4[40];是合法的变量定义语句","index":0,"selected":false},{"title":"数组说明符的一对方括号只能使用整型常量，而不能使用表达式","index":1,"selected":false},{"title":"数组下标的下限可以负值","index":2,"selected":false},{"title":"若有数组定义float a[4];则语句printf(\"%f\", a[3,2]);是合法的","index":3,"selected":false}],"mode":0,"answer":0,"parse":""},{"title":"设有如下程序段\nint a[8] \u003d {0};\nint b[] \u003d {0};\nchar c[2] \u003d {\"A\",\"B\"};\nchar d \u003d \"AB\";\n以下叙述正确的是（ ）。","chooseList":[{"title":"只有a、b和c的定义是合法的","index":0,"selected":false},{"title":"a、b、c和d的定义都是合法的","index":1,"selected":false},{"title":"只有a和b的定义是合法的","index":2,"selected":false},{"title":"只有c的定义是合法的","index":3,"selected":false}],"mode":0,"answer":2,"parse":"c定义的是char类型的一维数组，每个元素只能是字符而不是字符串，c定义错误；d定义的是char类型的变量，值只能是字符，d定义错误。故选C"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nstruct person {\nchar name[10];\nint age;\n}\nint main() {\nstruct person room[4] \u003d {{\"Zhang\", 19},{\"Li\", 20},{\"Wang\", 17},{\"Zhao\", 18}};\nprintf(\"%s:%d\\n\", (room+2)-\u003ename, room-\u003eage);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"Wang:19","index":0,"selected":false},{"title":"Wang:17","index":1,"selected":false},{"title":"Li:20","index":2,"selected":false},{"title":"Li:19","index":3,"selected":false}],"mode":0,"answer":0,"parse":"可用以下3中形式来引用结构体变量中的成员：结构体变量名.成员名；指针变量名-\u003e成员名；(*指针变量名).成员名。数组名是指向数组首地址，也可以当做指向数组的指针来使用。room+2指向数组第三个元素，(room+2)-\u003ename为字符串Wang；room指向数组第一个元素，room-\u003eage\u003d19。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint main() {\nchar a \u003d \u00273\u0027, b \u003d \u0027A\u0027;\nint i;\nfor ( i \u003d 0; i \u003c 6; i++ ) {\nif ( i % 3 ) putchar(a+i);\nelse putchar(b+i);\n}\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"A45D78","index":0,"selected":false},{"title":"ABC678","index":1,"selected":false},{"title":"34CD78","index":2,"selected":false},{"title":"34AB78","index":3,"selected":false}],"mode":0,"answer":0,"parse":"当i为0和3时输出b+i，其他的输出a+i。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint main() {\nint a \u003d 0, b \u003d 1;\nif ( a++ \u0026\u0026 b++ ) printf(\"T\");\nelse printf(\"F\");\nprintf(\"a\u003d%d,n\u003d%d\\n\", a, b);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"Ta\u003d1,b\u003d2","index":0,"selected":false},{"title":"Fa\u003d0,b\u003d2","index":1,"selected":false},{"title":"Fa\u003d1,b\u003d1","index":2,"selected":false},{"title":"Ta\u003d0,b\u003d1","index":3,"selected":false}],"mode":0,"answer":2,"parse":"题目中判断if条件是否成立，a++先取值为0，不满足条件，则不执行\u0026\u0026后面的b++，然后a自增得1。所以第一个输出为F，排除AD，因为a自增得1，所以后面的输出a\u003d1，故选C"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint change(int *data) {\nreturn (*data)++;\n}\nint main() {\nint data \u003d 123;\nchange(\u0026data);\nprintf(\"%d,\", data);\ndata \u003d change(\u0026data);\nprintf(\"%d\", data);\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"124,124,","index":0,"selected":false},{"title":"123,124,","index":1,"selected":false},{"title":"124,123,","index":2,"selected":false},{"title":"123,123,","index":3,"selected":false}],"mode":0,"answer":0,"parse":"本题程序执行过程为：调用change函数，将变量data地址传入函数，返回当前指针指向的变量值123，之后此变量加1，data\u003d124。输出data\u003d124。再次调用函数，返回当前指针指向的变量值124，然后此地址内存中变量加1，data\u003d125，然后将返回值124赋给变量data\u003d124，最后输出124。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint main() {\nint i;\nfor ( i \u003d 0; i \u003c 5; i++ )\nputchar(\u00279\u0027-i);\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"54321","index":0,"selected":false},{"title":"98765","index":1,"selected":false},{"title":"\u00279\u0027\u00278\u0027\u00277\u00276\u00275\u0027","index":2,"selected":false},{"title":"\u002743210\u0027","index":3,"selected":false}],"mode":0,"answer":1,"parse":"putchar函数是向标准输出设备上输出一个字符。字符在内存中以ASCII码方式存储，可以与整数进行加减运算，但是要保证计算结果在0~255之间。本题执行过程：i\u003d0，输出字符9，在i\u003c5的情况下，一次输出字符8、7、6、5。在i\u003d5时，计数for循环。最后显示命令窗口为98765，故选B"},{"title":"下列叙述中错误的是（ ）。","chooseList":[{"title":"算法的时间复杂度与算法所处理数据的存储结构有直接关系","index":0,"selected":false},{"title":"算法的空间复杂度与算法所处理数据的存储结构有直接关系","index":1,"selected":false},{"title":"算法的时间复杂度与空间复杂度有直接关系","index":2,"selected":false},{"title":"算法的时间复杂度与算法程序执行的具体时间是不一致的","index":3,"selected":false}],"mode":0,"answer":2,"parse":"算法的时间复杂度是指执行算法所需的计算工作量。数据的存储结构直接决定数据输入，而这个会影响算法所执行的基本运算次数，A选项叙述正确。算法的空间复杂度是指执行这个算法所需要的内存空间，其中包括输入数据所占的存储空间，B正确。而算法的时间复杂度与空间复杂度没有直接关系，C错误。算法程序执行的具体时间受到所使用的计算机、程序设计语言以及算法实现过程中的许多细节影响，而算法的时间复杂度与这些因素无关，所以是不一致的，D正确。故选C"},{"title":"软件工程的三要素是（ ）。","chooseList":[{"title":"方法、工具和过程","index":0,"selected":false},{"title":"建模、方法和工具","index":1,"selected":false},{"title":"建模、方法和过程","index":2,"selected":false},{"title":"定义、方法和过程","index":3,"selected":false}],"mode":0,"answer":0,"parse":"软件工程是应用于计算机软件的定义、开发和维护的一整套方法、工具、文档、实践标准和工序。软件工程包含3个要素：方法、工具和过程。故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nvoid change(int *a, int len) {\nfor ( ; len \u003e\u003d 0; len-- ) a[len] +\u003d 2;\n}\nint main() {\nint i, a[5] \u003d { 1, 2 };\nchange(a, 4);\nfor ( i \u003d 0; i \u003c 4; i++ ) printf(\"%d,\", a[i]);\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"2,3,4,5,","index":0,"selected":false},{"title":"3,4,5,6,","index":1,"selected":false},{"title":"3,4,2,2,","index":2,"selected":false},{"title":"1,2,0,0,","index":3,"selected":false}],"mode":0,"answer":2,"parse":"在对一维数组初始化时，如果在说明数组时给出了长度，但没有给所有的元素赋予初始值，而只依次给前面的几个数组元素赋予初值，那么C语言将自动对余下的元素赋初值0。本题程序执行过程为：调用change函数，将数组a的首地址传入函数，函数实现将数组每个元素加2，a\u003d{3,4,2,2,2}。然后输出前4个元素。故选C"},{"title":"设a，b，c是整型变量且均已赋值，则以下选项中错误的赋值语句是（ ）。","chooseList":[{"title":"a\u003d(b\u003d3)\u003d1;","index":0,"selected":false},{"title":"a\u003d(b\u003d2)+c;","index":1,"selected":false},{"title":"a\u003db\u003dc+10;","index":2,"selected":false},{"title":"a\u003d1+(b\u003dc\u003d2);","index":3,"selected":false}],"mode":0,"answer":0,"parse":"赋值运算结合性为由右往左结合，赋值运算符左值为变量，右值为变量或常量，且左右两边数据类型相同才能实现赋值。A选项中，赋值运算(b\u003d3)\u003d1，左值为表达式，错误，故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nvoid get_put() {\nchar ch;\nch \u003d getchar();\nif ( ch !\u003d \u0027\\n\u0027 ) get_put();\nputchar(ch);\n}\nint main() {\nget_put();\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行时，输入: 1234\u003cCR\u003e，则输出结果是（ ）。","chooseList":[{"title":"1234","index":0,"selected":false},{"title":"4321","index":1,"selected":false},{"title":"4444","index":2,"selected":false},{"title":"1111","index":3,"selected":false}],"mode":0,"answer":1,"parse":"\u0027\\n\u0027在键盘中对应的按键是回车键，所以get_put函数的递归调用结束条件是输入回车键。输出结果的顺序和第31题一样，选B"},{"title":"设循环队列为Q(1:m)，其初始状态为front\u003drear\u003dm。经过一系列入队与退队运算后，front\u003d15，rear\u003d20。现要在该循环队列中寻找最大值的元素，最坏情况下需要比较的次数为（ ）。","chooseList":[{"title":"4","index":0,"selected":false},{"title":"6","index":1,"selected":false},{"title":"m-5","index":2,"selected":false},{"title":"m-6","index":3,"selected":false}],"mode":0,"answer":0,"parse":"循环队列是队列的一种顺序存储结构，用队尾指针rear指向队列中的队尾元素，用排头指针指向排头元素的前一个位置，因此，从排头指针front指向的后一个位置直到队尾指针rear指向的位置之间所有的元素均为队列中的元素，队列初始状态为front\u003drear\u003dm，当front\u003d15，rear\u003d20时，队列中有5个元素，比较次数为4，A正确"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint main() {\nint a \u003d 8, b;\nb \u003d ( a \u003e\u003e 2 ) % 2;\nprintf(\"%d,%d\\n\", a,b);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"8,0","index":0,"selected":false},{"title":"4,0","index":1,"selected":false},{"title":"4,1","index":2,"selected":false},{"title":"8,1","index":3,"selected":false}],"mode":0,"answer":0,"parse":"C语言中，“\u003e\u003e”表示右移，右移n位相当于除以2^n，“\u003c\u003c”表示左移，左移n为相当于乘上2^n。计算得到b的值为0。故选A"},{"title":"在数据库设计中，将E-R图转换成关系数据模型的过程属于（ ）。","chooseList":[{"title":"逻辑设计阶段","index":0,"selected":false},{"title":"需求分析阶段","index":1,"selected":false},{"title":"概念设计阶段","index":2,"selected":false},{"title":"物理设计阶段","index":3,"selected":false}],"mode":0,"answer":0,"parse":"采用E-R方法得到的全局概念模型是对信息世界的描述，并不适用于计算机处理，为了适合关系数据库系统的处理，必须将E-R图转换成关系模式。这就是逻辑设计的主要内容，故选A"},{"title":"若有函数声明\nvoid fun(float a[], int *p);\n以下叙述正确的是（ ）。","chooseList":[{"title":"函数参数a，p都是指针变量","index":0,"selected":false},{"title":"函数参数a表示指针变量，p是指针变量","index":1,"selected":false},{"title":"调用函数时，实参数组的值将一一复制给a数组","index":2,"selected":false},{"title":"调用函数时，a是按值传递，p是按地址传递","index":3,"selected":false}],"mode":0,"answer":0,"parse":"数组名为数组的首地址，也是指向数组的指针，所以a和p都是指针，A正确，B错误；函数调用时，将实参数组首地址赋给指针a，而不是传递整个数组元素，C错误；调用函数时，a和p都是按地址传递的，D错误。故选A"},{"title":"某二叉树中有n个叶子结点，则该二叉树中度为2的结点数为（ ）。","chooseList":[{"title":"n+1","index":0,"selected":false},{"title":"n-1","index":1,"selected":false},{"title":"2n","index":2,"selected":false},{"title":"n/2","index":3,"selected":false}],"mode":0,"answer":1,"parse":"对任何一棵二叉树，度为0的结点（即叶子结点）总是比度为2的结点多一个。二叉树中有n个叶子结点，则度为2的结点个数为n-1，故选B"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint sum(int a, int b) {\nreturn a + b - 2;\n}\nint main() {\nint i;\nfor ( i \u003d 0; i \u003c 5; i++ ) printf(\"%d\", sum(i, 3));\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"54321","index":0,"selected":false},{"title":"012345","index":1,"selected":false},{"title":"45678","index":2,"selected":false},{"title":"12345","index":3,"selected":false}],"mode":0,"answer":3,"parse":"当i分别等于0、1、2、3、4时依次输出0+3-2、1+3-2、2+3-2、3+3-2、4+3-2的结果即12345。故选D"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint main() {\nint x \u003d 0x13;\nif ( x \u003d 0x18 ) printf(\"T\");\nprintf(\"F\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"TF","index":0,"selected":false},{"title":"T","index":1,"selected":false},{"title":"F","index":2,"selected":false},{"title":"TFT","index":3,"selected":false}],"mode":0,"answer":0,"parse":"x\u003d0x18为赋值表达还是，十六进制数0x18非0，即x非0，if条件成立输出T，之后再输出F与回车符。程序运行后结果是TF，A正确"},{"title":"设有以下程序段\nstruct person {\nchar name[10];\nchar sex;\nfloat weight;\n} zhangsan, *ptr;\nptr \u003d \u0026zhangsan;\n若要从键盘读入姓名给结构体变量zhangsan的成员name，以下输入项错误的是（ ）。","chooseList":[{"title":"scanf(\"%s\", (*ptr).name);","index":0,"selected":false},{"title":"scanf(\"%s\", zhangsan-\u003ename);","index":1,"selected":false},{"title":"scanf(\"%s\", zhangsan.name);","index":2,"selected":false},{"title":"scanf(\"%s\", ptr-\u003ename);","index":3,"selected":false}],"mode":0,"answer":1,"parse":"结构体变量访问其成员用“.”，结构体指针变量访问其成员用“-\u003e”，B错误；故选B"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nint main() {\nint x \u003d 072;\nprintf(\"%d\\n\", x+1);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"59","index":0,"selected":false},{"title":"73","index":1,"selected":false},{"title":"115","index":2,"selected":false},{"title":"72","index":3,"selected":false}],"mode":0,"answer":0,"parse":"程序中的x是八进制表示法，对应的十进制是58，+1得59。故选A"},{"title":"以下涉及字符串数组、字符指针的程序段，不会产生编译错误的是（ ）。","chooseList":[{"title":"char *str, name[10]; str \u003d \"Hello World\";","index":0,"selected":false},{"title":"char *str, name[10]; name \u003d \"Hello World\";","index":1,"selected":false},{"title":"char str1[10] \u003d \"prog.c\", str2[10]; str2 \u003d str1;","index":2,"selected":false},{"title":"char head_len[]l head_line \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","index":3,"selected":false}],"mode":0,"answer":0,"parse":"数组只能对元素逐个赋值而不能整体赋值，B错误；数组之间不能直接用“\u003d”赋值，C错误；定义数组时如果不说明数组的大小则必须初始化，而且后一条语句和B选项是同样的错误。故选A"},{"title":"下面可以作为软件设计工具的是（ ）。","chooseList":[{"title":"系统结构图","index":0,"selected":false},{"title":"数据字典（DD）","index":1,"selected":false},{"title":"数据流程图（DFD图）","index":2,"selected":false},{"title":"甘特图","index":3,"selected":false}],"mode":0,"answer":0,"parse":"程序设计分为：结构化程序设计，面向对象的程序设计。结构化设计方法使用的描述方式是系统结构图，故选A"},{"title":"有如下程序\n#include \u003cstdio.h\u003e\nstruct pair {\nint first, second;\n}\nstruct pair get_min_max(int *a, int len) {\nint i;\nstruct pair res;\nres.first \u003d a[0];\nres.second \u003d a[0];\nfor ( i \u003d 1; i \u003c len; i++ ) {\nif ( a[i] \u003c res.first ) res.first \u003d a[i];\nif ( a[i] \u003e res.seconde ) res.second \u003d a[i];\n}\nreturn res;\n}\nint main() {\nint a[5] \u003d { 9, 1, 3, 4 };\nstruct pair min_max \u003d get_min_max(a, 5);\nprintf(\"min\u003d%d,max\u003d%d\\n\", min_max.first, min_max.second);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"min\u003d1,max\u003d9","index":0,"selected":false},{"title":"min\u003d0,max\u003d9","index":1,"selected":false},{"title":"min\u003d1,max\u003d4","index":2,"selected":false},{"title":"min\u003d0,max\u003d4","index":3,"selected":false}],"mode":0,"answer":1,"parse":"数组a中还有一个元素没有被初始化，所以系统初始化为0，get_min_max函数的功能是将数组的最小元素放入结构体的成员first，最大值放入second。故选B"}]}