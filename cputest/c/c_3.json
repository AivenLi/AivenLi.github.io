{"code":0,"msg":"success","data":[{"title":"设序列长度为n，在最坏情况下，时间复杂度为O(log2n)的算法是（ ）。","chooseList":[{"title":"顺序查找","index":0,"selected":false},{"title":"分块查找","index":1,"selected":false},{"title":"哈希查找","index":2,"selected":false},{"title":"二分查找","index":3,"selected":false}],"mode":0,"answer":3,"parse":"对长度为n的线性表排序，最坏情况下时间复杂度：顺序查找为O(n)；分块查找时间复杂度与分块规则有关；哈希查找时间复杂度为O(1)，因为通过计算HashKey来定位元素位置，所以只需一次即可。故选D"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main(void) {\nchar a\u003d\u00270\u0027,b\u003d\u0027a\u0027;\nint i;\nfor(i\u003d0;i\u003c4;i++) {\nif(i%3) putchar(a+i);\nelse putchar(b+i);\n}return 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"a12d","index":0,"selected":false},{"title":"ab3d","index":1,"selected":false},{"title":"10ab","index":2,"selected":false},{"title":"11ac","index":3,"selected":false}],"mode":0,"answer":0,"parse":"if(i%3)表示i对3取余，如果不等于0表示满足if条件，执行if后面的语句（putchar(a+i)），否则执行else后面的语句（putchar(b+i)）。可见，当i\u003d0时i%3\u003d0执行putchar(b+i)，输出a，以此类推当i\u003d1时，执行putchar(a+i)，输出1；当i\u003d2时，执行putchar(a+i)，输出2；当i\u003d3时，执行putchar(b+i)，输出d，答案为A"},{"title":"以下对C语言函数的叙述中正确的是（ ）。","chooseList":[{"title":"调用函数时，只能把实参的值传给形参，形参的值不能传给实参","index":0,"selected":false},{"title":"函数既能嵌套定义，又能递归定义","index":1,"selected":false},{"title":"函数必须有返回值，否则不能使用","index":2,"selected":false},{"title":"程序中有调用关系的所有函数必须放在同一个源程序中","index":3,"selected":false}],"mode":0,"answer":0,"parse":"C语言的函数既不能嵌套定义，也不能递归定义，B错误；函数可以没有返回值，没有返回值的函数返回类型为void，C错误；程序有调用关系的所有函数可以不放在同一源程序中，D错误。"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\n#define S(x) x/x*x\nint main(void) {\nint k\u003d6,j\u003d3;\nprintf(\"%d,%d\\n\",S(k+j),S(j+k));\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"27,27","index":0,"selected":false},{"title":"9,9","index":1,"selected":false},{"title":"27,29","index":2,"selected":false},{"title":"29,29","index":3,"selected":false}],"mode":0,"answer":2,"parse":"该题主要是考宏定义的展开，S(k+j+2)展开如下：k+j*k+j/k+j\u003d27，下一个也是如此展开，结果的29，选C。"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint a\u003d2;\nint f(int k) {\nstatic int n\u003d0;\nint m\u003d0;\nn++;a++;m++;k++;\nreturn n+m+a+k;\n}\nint main(void) {\nint k;\nfor(k\u003d0;k\u003c2;k++)\nprintf(\"%d\",f(k));\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"6,9,","index":0,"selected":false},{"title":"6,10,","index":1,"selected":false},{"title":"6,6,","index":2,"selected":false},{"title":"6,7,","index":3,"selected":false}],"mode":0,"answer":0,"parse":"在函数f中，有一个static修饰的变量n，n只会被初始化一次，即使函数调用结束n的值依然健在。在main函数中的for循环调用f函数，返回值是全局变量a、局部变量m、形参k和静态变量n均加1之后的和，全局变量a和静态变量n的值会被保存下来，所以输出结果是“6,9,”。选A"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint *sum(int data) {\nstatic int init\u003d1;\ninit+\u003ddata;\nreturn \u0026init;\n}\nint main(void) {\nint i, *p;\nfor(i\u003d0;i\u003c3;i++)\nsum(i);\np\u003dsum(i);\nprintf(\"%d\\n\",*p);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"7","index":0,"selected":false},{"title":"8","index":1,"selected":false},{"title":"9","index":2,"selected":false},{"title":"10","index":3,"selected":false}],"mode":0,"answer":1,"parse":"static修饰的变量只会初始化一次，而且函数调用结束后该变量的值依然存在。在for函数的循环体中调用sum(i)函数，循环3次，每次都把i的值累加在init中，再执行i+1操作，因此，退出循环后，init\u003d1+1+2+3\u003d7，再执行一次sum(1)，init\u003d8后，把init的地址赋值给指针p，输出指针p指向的内存地址的值（即init的值），答案为B"},{"title":"下面不属于对象主要特征的是（ ）。","chooseList":[{"title":"唯一性","index":0,"selected":false},{"title":"多态性","index":1,"selected":false},{"title":"可复用性","index":2,"selected":false},{"title":"封装性","index":3,"selected":false}],"mode":0,"answer":2,"parse":"对象的基本特点如下\n标识唯一性：一个对象通常由对象名、属性和操作三部分组成；\n分类性：指可以将具有相同属性和操作的对象抽象成类；\n多态性：指同一个操作可以是不同对象的行为，不同对象执行同一操作产生不同的结果；\n封装性：从外面看只能看到对象的外部特性，对象的内部对外是不可见的；\n模块独立性好：由于完成对象功能所需的元素都被封装在对象内部，所以模块独立性好。\n可知C选项正确"},{"title":"有以下程序\n#define Out(n) n%2\u003d\u003d0?\"%c\":\"%d\"\n#include\u003cstdio.h\u003e\nint main(void) {\nint x;\nfor(x\u003d65;x\u003c69;x++)\nprintf(Out(x),x);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"ABCD","index":0,"selected":false},{"title":"A66C68","index":1,"selected":false},{"title":"65666768","index":2,"selected":false},{"title":"65B67D","index":3,"selected":false}],"mode":0,"answer":3,"parse":"代码中定义了一个宏函数，功能为判断一个数能否整除2，如果能，输出当前值对应的ASCII码，否则输出当前值的整数，在for循环中，调用该函数进行输出，答案为D"},{"title":"有以下程序\n#include\u003cstdio.n\u003e\nvoid f(int x[], int n) {\nif(n\u003e1) {\nprintf(\"%d,\",x[0]);\nf(\u0026x[1],n-1);\nprintf(\"%d\",x[0]);\n}\nelse printf(\"%d,\",x[0]);\n}\nint main(void) {\nint z[3]\u003d{4,5,6};\nf(z,3);\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"6,5,4,6,5,4,","index":0,"selected":false},{"title":"4,5,6,5,4,","index":1,"selected":false},{"title":"4,5,6,4,5,6,","index":2,"selected":false},{"title":"6,5,4,5,6,","index":3,"selected":false}],"mode":0,"answer":1,"parse":"本题考查了函数的递归调用，在main函数中调用f(z,3)后，程序进入f函数，随后进入if语句，输出x[0]，在进入f()函数时，存在\u0026x[1]函数的递归，输出x[1]，再进入f函数，再进行递归，输出x[2]，随后结束饭后输出上一个f函数，输出x[1]，再返回第一个f函数中，输出x[0]，程序运行后的输出结果为4,5,6,5,4,。故选B"},{"title":"有如下程序段\nint *p,a\u003d1;\np\u003d\u0026a;*p\u003d10;\n则变量a的值为（ ）。","chooseList":[{"title":"1","index":0,"selected":false},{"title":"10","index":1,"selected":false},{"title":"11","index":2,"selected":false},{"title":"不能确定","index":3,"selected":false}],"mode":0,"answer":1,"parse":"指针p指向a的地址，然后把10赋值给p指向的地址，所以a的值为10，选B"},{"title":"有如下程序\n#include\u003cstdio.h\u003e\n#include\u003cstring.h\u003e\nint main(void) {\nchar a[]\u003d\"1234\",*b\u003d\"ABC\";\nprintf(\"%d,%d,%d,%d\\n\",strlen(a),sizeof(a),\nstrlen(b),sizeof(b));\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"4,5,1,3","index":0,"selected":false},{"title":"4,3,2,1","index":1,"selected":false},{"title":"4,5,3,3","index":2,"selected":false},{"title":"4,5,3,4","index":3,"selected":false}],"mode":0,"answer":3,"parse":"当将一个字符串存储到char类型的数组时，系统会在其末尾加上结束符（\u0027\\0\u0027），strlen函数返回字符串的长度，不包括结束符，所以strlen(a)和strlen(b)的结果分别是4和3，而sizeof的作用是返回一个变量（或常量甚至类型）所占的内存字节数，返回值包括结束符，所以sizeof(a)\u003d5，而sizeof(b)的结果是4，因为b是一个指针，任何类型的指针都占用4字节。选D"},{"title":"以下选项中，合法的C语言实数是（ ）。","chooseList":[{"title":"E1","index":0,"selected":false},{"title":"1e0","index":1,"selected":false},{"title":"0.10E","index":2,"selected":false},{"title":"2.1e0.2","index":3,"selected":false}],"mode":0,"answer":1,"parse":"C语言的数值表示中，e和E都表示“10的冥次”，后面必须接整数，排除C、D选项；e前必须有底数，排除A选项，故选B"},{"title":"有如下程序\n#include\u003cstdio.h\u003e\nstruct pair {\nint first,second;\n};\nstruct pair get_min_max(int *array,int len) {\nint i;\nstruct pair res;\nres.first\u003darray[0];\nres.second\u003darray[0];\nfor(i\u003d1;i\u003clen;i++)\nres.first\u003darray[i];\nif(array[i]\u003eres.second)\nres.second\u003darray[i];\n}\nreturn res;\n}\nint main(void) {\nint array[6]\u003d{19,21,3,4};\nstruct pair min_max\u003dget_min_max(array,6);\nprintf(\"min\u003d%d,max\u003d%d\\n\",\nmin_max.first,min_max.second);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"min\u003d0,max\u003d6","index":0,"selected":false},{"title":"min\u003d0,max\u003d21","index":1,"selected":false},{"title":"min\u003d1,max\u003d19","index":2,"selected":false},{"title":"min\u003d1,max\u003d20","index":3,"selected":false}],"mode":0,"answer":1,"parse":"函数get_min_max的功能是将数值中的最小值和最大值取出来后分别赋值给结构体变量min_max的first和second成员，数组长度为6，初始化了4个元素（前4个），剩下的2个元素系统赋值为0，因此答案为B"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint sum_mod(int a,int b) {\nreturn a+b%2;\n}\nint main(void) {\nint i;\nfor(i\u003d0;i\u003c5;i++) {\nprintf(\"%d\",sum_mod(i,4));\n}\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后的输出结果是（（ ）。","chooseList":[{"title":"01234","index":0,"selected":false},{"title":"12345","index":1,"selected":false},{"title":"45678","index":2,"selected":false},{"title":"4321·","index":3,"selected":false}],"mode":0,"answer":0,"parse":"程序的main函数中的printf函数的参数调用sum_mod函数，计算结果i+4%2；因为4%2\u003d0，所以每次sum_mod函数的返回值都是i的值，所以输出结果为：01234，选A"},{"title":"设有以下程序段\nstruct person {\nfloat weight;\nchar sex;\nchar name[10];\n} rec,*ptr;\nptr\u003d\u0026rec;\n从键盘读入字符串给结构体变量rec的成员name，错误的输入语句是（ ）。","chooseList":[{"title":"scanf(\"%s\",\u0026rec-\u003ename);","index":0,"selected":false},{"title":"scanf(\"%s\",rec.name);","index":1,"selected":false},{"title":"scanf(\"%s\",(*ptr).name);","index":2,"selected":false},{"title":"scanf(\"%s\",ptr-\u003ename);","index":3,"selected":false}],"mode":0,"answer":0,"parse":"A选项中，rec是一个结构体变量，结构体变量访问其成员的方式应该为：rec.成员名，A错误，所以选A"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main(void) {\nint a,b;\nfor(a\u003d0;a\u003c3;a++) {\nscanf(\"%d\",\u0026b);\nswitch(b) {\ndefault:printf(\"%d,\",b++);\ncase 1:printf(\"%d,\",b++);\ncase 2:printf(\"%d,\",b++);\n}\n}\nreturn 0;\n}\n程序运行时输入：1 2 3\u003cCR\u003e，则输出结果是（ ）。","chooseList":[{"title":"1,2,3,2,3,3,","index":0,"selected":false},{"title":"1,2,3,","index":1,"selected":false},{"title":"1,2,2,3,4,5,","index":2,"selected":false},{"title":"1,1,1,2,2,3,","index":3,"selected":false}],"mode":0,"answer":2,"parse":"程序在执行switch语句时，根据switch后面表达式的值找到匹配的入口标号，执行对应的case语句，之后不再进行判断，继续执行case后面的语句，并且各个case和default的出现次序不影响执行结果，即题目中的default放在最上面和放在最下面的效果是一样的；运算符“++”放在变量后面时，表示先使用变量的值，然后变量的值再加1。本题中，第一次循环输入b\u003d1，执行case 1，输出1，再执行case 2，输出2，第二次循环输入b\u003d2，执行case 2，输出2，第三次循环，输入b\u003d3，没有对应的case，执行default，输出3，接着执行case 1输出4，然后又执行case 2输出5，循环结束。输出结果为“1,2,2,3,4,5,”，选C"},{"title":"简单程序设计步骤中不包括（ ）。","chooseList":[{"title":"编码","index":0,"selected":false},{"title":"确定算法","index":1,"selected":false},{"title":"安装编译程序","index":2,"selected":false},{"title":"调试","index":3,"selected":false}],"mode":0,"answer":2,"parse":"简单程序设计步骤为：确定数据结构、确定算法、编码、调试和整理文档，不包括安装编译程序。"},{"title":"以下对指针变量的操作中，错误的程序段是（ ）。","chooseList":[{"title":"int x\u003d0,*p;*p\u003dx;","index":0,"selected":false},{"title":"int x\u003d1,*p,*q\u003d\u0026x;p\u003dq;","index":1,"selected":false},{"title":"int *p,*q;q\u003dp\u003dNULL;","index":2,"selected":false},{"title":"int p,*q;q\u003d\u0026p;","index":3,"selected":false}],"mode":0,"answer":0,"parse":"定义指针p后，指针p还没有指向任何地址就对其赋值，故A错误，所以选A"},{"title":"关于C语言中的注释，以下叙述正确的是（ ）。","chooseList":[{"title":"注释内容可以放在一对/*和*/之间","index":0,"selected":false},{"title":"注释必须置于所说明的语句前或语句后","index":1,"selected":false},{"title":"注释中间可以嵌套另一个注释","index":2,"selected":false},{"title":"注释内容错误会导致编译出错","index":3,"selected":false}],"mode":0,"answer":0,"parse":"代码中，注释可以出现在代码的任何位置，B错误；注释中间不能嵌套另一个注释，C错误；注释内容不影响编译代码，D错误。故选A"},{"title":"有如下定义\nstruct st {\nint x;\nfloat y;\n} rec, *ptr;\n若要使指针ptr指向rec的成员x，正确的赋值语句是（ ）。","chooseList":[{"title":"ptr\u003d(struct st*)\u0026rec.x;","index":0,"selected":false},{"title":"ptr\u003d(struct st*)rec.x;","index":1,"selected":false},{"title":"ptr\u003d\u0026rec.x;","index":2,"selected":false},{"title":"*ptr\u003drec.x;","index":3,"selected":false}],"mode":0,"answer":0,"parse":"rec.x表示整形变量，强制类型转换为strcut st类型的指针赋给ptr后，ptr并不指向rec的x，B选项错误；\u0026rec.x是整型变量的地址，不能直接赋给struct st类型的指针，C选项错误；ptr未初始化，指向的内存地址是未知的，将rec.x的值赋给该内存单元是很危险的，并且这种方法也不能使ptr指向rec的成员x，ptr依然指向未知内存地址，D选项错误；\u0026rec.x是取rec的成员x的地址，然后强制转换为struct st类型指针，并复制给ptr，可以使ptr指向rec的成员x，A选项正确"},{"title":"使用白盒测试方法时，设计测试用例应根据（ ）。","chooseList":[{"title":"使用说明书","index":0,"selected":false},{"title":"程序的功能","index":1,"selected":false},{"title":"程序的复杂结构","index":2,"selected":false},{"title":"程序的内部逻辑","index":3,"selected":false}],"mode":0,"answer":3,"parse":"白盒测试又称为结构测试或逻辑驱动测试，它允许测试人员利用程序内部的逻辑结构及有关信息来设计或选择测试用例，对程序所有的逻辑路径进行测试。D正确"},{"title":"下列能作为软件需求分析工具的是（ ）。","chooseList":[{"title":"PAD图","index":0,"selected":false},{"title":"程序流程图","index":1,"selected":false},{"title":"甘特图","index":2,"selected":false},{"title":"数据流程图（DFD图）","index":3,"selected":false}],"mode":0,"answer":3,"parse":"软件需求分析方法包括结构化分析方法和面向对象的分析方法两大类，前者常用工具为数据流程图（DFD）、数据字典（DD）、判定表和判定树等。故D选项正确"},{"title":"有C语言表达式 2*3+4+15%3，关于其执行顺序，一下叙述正确的是（ ）。","chooseList":[{"title":"先执行2*3得6，再执行6+4得10，再执行15%3得0，最后执行10+0得10","index":0,"selected":false},{"title":"先执行2*3得6，再执行15%3得5，最后执行6+4+5得15","index":1,"selected":false},{"title":"先执行15%3得0，再执行2*3得6，最后执行6+4+0得10","index":2,"selected":false},{"title":"先执行15%3得3，再执行4+3得7，再执行2*3得6，最后执行6+7得13","index":3,"selected":false}],"mode":0,"answer":0,"parse":"首先运算符“*”和运算符“%”的优先级相同，并且优先级均高于运算符“+”，再根据运算结合性，乘法和取余运算都满足从左到右的运算规则，C、D选项错误；因为15%3\u003d0，排除B选项，故选A"},{"title":"有如下定义\nstruct st {\nint n;\nfloat t;\n} a[20];\nFILE *fp;\n若文件已正确打开，则以下将文件内容读入数组a中的语句错误的是（ ）。","chooseList":[{"title":"for(i\u003d0;i\u003c20;i++)\nfread(a[i],sizeof(struct st),1L,fp);","index":0,"selected":false},{"title":"fread(a,sizeof(struct st),20L,fp);","index":1,"selected":false},{"title":"for(i\u003d0;i\u003c20;i+\u003d2)\nfread(\u0026a[i],2*sizeof(struct st),1L,fp);","index":2,"selected":false},{"title":"for(i\u003d0;i\u003c20;i++,i++)\nfread(\u0026a[i],sizeof(struct st),2L,fp);","index":3,"selected":false}],"mode":0,"answer":0,"parse":"fread的函数原型如下\nint fread(void *buffer, size_t size, size_t count, FILE *fp)\n第一个参数是指针类型，A选项参数传递错误，故选A"},{"title":"在学校，每个教师只教授一门课程，教师同一天可为多个班级授课，而一个班级可有多名教师授课。则实体教师和班级之间的联系是（ ）。","chooseList":[{"title":"一对一","index":0,"selected":false},{"title":"一对多","index":1,"selected":false},{"title":"多对一","index":2,"selected":false},{"title":"多对多","index":3,"selected":false}],"mode":0,"answer":3,"parse":"一般来说，实体集之间必须通过联系来建立联接关系，分为三类：一对一联系（1:1）、一对多联系（1：m）和多对多联系（m：m），教师可为多个班级授课，班级也可以有多名教师授课，实体教师与班级联系是多对多，D正确"},{"title":"下列关于算法复杂度叙述正确的是（ ）。","chooseList":[{"title":"时间复杂度与所用的计算工具无关","index":0,"selected":false},{"title":"时间复杂度与采用的算法描述语言有关","index":1,"selected":false},{"title":"最坏情况下的时间复杂度一定高于平均情况的时间复杂度","index":2,"selected":false},{"title":"对同一个问题，采用不同的算法，则它们的时间复杂度是相同的","index":3,"selected":false}],"mode":0,"answer":0,"parse":"算法的时间复杂度是指执行算法需要的计算工作量，它与使用的计算机、程序设计语言以及算法实现过程中的许多细节无关，A选项正确，B选项错误。最坏情况下的时间复杂度可以与平均情况的时间复杂度相同，C选项错误。不同的算法时间复杂度一般不相同，D选项错误。"},{"title":"若有定义\ntypedef int *T;\nT *a[20];\n则以下与上述定义中a类型完全相同的是（ ）。","chooseList":[{"title":"int **a[20];","index":0,"selected":false},{"title":"int (*a)[20];","index":1,"selected":false},{"title":"int *(*a)[20];","index":2,"selected":false},{"title":"int *a[20];","index":3,"selected":false}],"mode":0,"answer":0,"parse":"typedef 类型名 新类型名 表示为一个已有定义的类型标识符重新定义一个类型名。题中，首先为指针类型取别名T，再通过T定义了一个指针数组a，整个功能等价于int **a[20]，答案为A选项"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main(void) {\nchar c;\nc\u003dgetchar();\ndo {\nputchar(c++);\n} while((c\u003dgetchar())!\u003d\u0027#\u0027);\nreturn 0;\n}\n程序运行时从第一列开始输入：\nabcdefg##\u003cCR\u003e\n则输出结果是（ ）。","chooseList":[{"title":"bcdefgh$","index":0,"selected":false},{"title":"bcdefgh","index":1,"selected":false},{"title":"abcdefg#","index":2,"selected":false},{"title":"abcdefg","index":3,"selected":false}],"mode":0,"answer":3,"parse":"运算符“++”放在变量后面时表示先取变量的值然后该变量再加1。putchar(c++)表示先输出c的值，c再加1，当输入abcdefg##\u003cCR\u003e时，在while语句中，程序输入“#”退出循环。因此输出结果为abcdefg，选D"},{"title":"以下非法的定义语句是（ ）。","chooseList":[{"title":"long b\u003d0L;","index":0,"selected":false},{"title":"unsigned int a\u003d-100u;","index":1,"selected":false},{"title":"short c2\u003d0123;","index":2,"selected":false},{"title":"int d\u003d0x0;","index":3,"selected":false}],"mode":0,"answer":1,"parse":"unsigned表示“无符号数”，选项B定义错误，故选B"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint k\u003d5;\nvoid f(int *s) {\ns\u003d\u0026k;\n*s\u003dk;\n}\nint main(void) {\nint m\u003d3;\nf(\u0026m);\nprintf(\"%d,%d\\n\",m,k);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"3,3","index":0,"selected":false},{"title":"3,5","index":1,"selected":false},{"title":"5,3","index":2,"selected":false},{"title":"5,5","index":3,"selected":false}],"mode":0,"answer":1,"parse":"看函数f的定义，形参是一个指向int类型的指针变量s，s取得全局变量k的地址，然后把k的值赋给s指向的地址（把k的值赋值给k），函数f并没有修改形参s最开始指向的地址的值，而且函数体是把k的值赋值给k，整个程序没有任何变量的值发生改变，m的值依然是3，k的值依然是5，所以输出3,5，选B"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main(void) {\nchar ch\u003d\u0027M\u0027;\nwhile(ch!\u003d\u0027K\u0027) {\nputchar(ch);\nch--;\n}\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"ML","index":0,"selected":false},{"title":"MK","index":1,"selected":false},{"title":"OP","index":2,"selected":false},{"title":"mm","index":3,"selected":false}],"mode":0,"answer":0,"parse":"while循环的结束条件是当ch等于K时，循环体是输出ch，然后ch的值减1。循环开始时输出M，ch--，ch\u003dL不满足条件；输出L，ch--，ch\u003dK满足条件结束循环。程序输出ML，故选A"},{"title":"若有定义\nint a; float b; double c;\n程序运行时输入：\n1,2,3\u003cCR\u003e\n能把1输入给变量a、2输入给变量b、3输入给变量c的输入语句是（ ）。","chooseList":[{"title":"scanf(\"%d,%f,%lf\",\u0026a,\u0026b,\u0026c);","index":0,"selected":false},{"title":"scanf(\"%d%f%lf\",\u0026a,\u0026b,\u0026c);","index":1,"selected":false},{"title":"scanf(\"%d,%lf,%lf\",\u0026a,\u0026b,\u0026c);","index":2,"selected":false},{"title":"scanf(\"%d,%f,%f\",\u0026a,\u0026b,\u0026c);","index":3,"selected":false}],"mode":0,"answer":0,"parse":"scanf函数中，%d对应的参数是整数型地址，%f对应参数为float型地址，%lf对应的参数为double型地址，因此C、D选项错误；根据题目输入的格式，B选项的格式化输入没有逗号，B错误；而A选项满足条件，故选A"},{"title":"深度为7的二叉树共127个结点，则下列说法中错误的是（ ）。","chooseList":[{"title":"该二叉树有一个度为1的结点","index":0,"selected":false},{"title":"该二叉树是满二叉树","index":1,"selected":false},{"title":"该二叉树是完全二叉树","index":2,"selected":false},{"title":"该二叉树有64个叶子结点","index":3,"selected":false}],"mode":0,"answer":0,"parse":"在树结构中，一个结点所拥有的后继个数称为该结点的度，所有结点中最大的度称为树的度。完全二叉树是指除最后一层外，每一层上的结点数均达到最大值，在最后一层上只缺少右边的若干结点。满二叉树指出最后一层外，每一层上的所有结点都有两个子结点的二叉树。深度为7的二叉树，前6层共有结点个数为2^6-1\u003d63，则第7层有127-63\u003d64个结点，即第7层结点数达到最大值，故此二叉树为满二叉树，也是完全二叉树，该二叉树没有度为1的结点，有64个叶子结点。A选项错误，故选A"},{"title":"下列叙述正确的是（ ）。","chooseList":[{"title":"循环链表是循环队列的链式存储结构","index":0,"selected":false},{"title":"线性结构的存储结点也可以有多个指针","index":1,"selected":false},{"title":"每一个结点有两个指针域的链表一定是非线性结构","index":2,"selected":false},{"title":"所有结点的指针域都为非空的链表一定是非线性结构","index":3,"selected":false}],"mode":0,"answer":1,"parse":"一个非空的数据结构如果满足一下两个条件：有且只有一个根结点；每一个结点最多有一个前驱，也最多有一个后继，则称为线性结构，在数据结构中习惯称为线性表。循环链表是链表，循环队列属于队列，队列只能在队尾入队，在排头退队；而链表可以在任何位置插入、删除，A错误。双向链表结点具有两个指针域，属于线性结构，C错误。循环链表所有结点的指针域都为非空，属于线性结构，D错误。双向链表具有多个指针域，B正确。"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main(void) {\nint i;\nFILE *fp;\nfor(i\u003d0;i\u003c3;i++) {\nfp\u003dfopen(\"res.txt\",\"w\");\nfputc(\u0027K\u0027+i,fp);\nfclose(fp);\n}\nreturn 0;\n}\n程序运行后，会在当前目录下生成一个res.txt文件，其内容是（ ）。","chooseList":[{"title":"EOF","index":0,"selected":false},{"title":"M","index":1,"selected":false},{"title":"KLM","index":2,"selected":false},{"title":"L","index":3,"selected":false}],"mode":0,"answer":1,"parse":"程序中打开文件的模式为“w”，表示只写模式，每次打开文件都会清空文件内容。程序中的每次for循环都会打开文件，写数据，关闭文件，文件最终只有一个数据，排除A、C选项；最后一次循环i\u003d2，\u0027K\u0027+2\u003d\u0027M\u0027，选B"},{"title":"有以下程序段\nint m\u003d33,n\u003d66;\nm\u003dm^n;\nn\u003dn^m;\nm\u003dm^n;\n执行上述语句后，m和n的值分别为（ ）。","chooseList":[{"title":"m\u003d66，n\u003d66","index":0,"selected":false},{"title":"m\u003d33，n\u003d66","index":1,"selected":false},{"title":"m\u003d66，n\u003d33","index":2,"selected":false},{"title":"m\u003d33，n\u003d33","index":3,"selected":false}],"mode":0,"answer":2,"parse":"C语言中的“^”表示按位异或。把m，n对应的二进制值按照题中语句进行运算后得m\u003d66，n\u003d33。由结果过可以发现该方法其实是不使用中间变量交换两个变量的值。故选C"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main(void) {\nint a\u003d0,b\u003d0;\nfor(;a\u003c5;a++) {\nif(a%2\u003d\u003d0) continue;\nb+\u003da;\nbreak;\n}\nprintf(\"%d\\n\",b);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"0","index":0,"selected":false},{"title":"1","index":1,"selected":false},{"title":"4","index":2,"selected":false},{"title":"10","index":3,"selected":false}],"mode":0,"answer":1,"parse":"for循环中，当a\u003d0时，满足if语句的条件，执行continue语句，继续下一次循环，此时a+1不满足if条件，执行b+\u003da语句（b\u003d1），然后执行break语句跳出循环，所以输出结果为1，选B"},{"title":"某二叉树的中序序列为BDCA，后序序列为DCBA，则前序序列为（ ）。","chooseList":[{"title":"DCBA","index":0,"selected":false},{"title":"BDCA","index":1,"selected":false},{"title":"ABCD","index":2,"selected":false},{"title":"BADC","index":3,"selected":false}],"mode":0,"answer":2,"parse":"二叉树遍历可以分为3种，前序遍历（访问根结点再访问左子树和右子树之前）、中序遍历（访问根结点在访问左子树和访问右子树两者之间）、后序遍历（访问根节点在访问左子树和访问右子树之后。本题中序序列为BDCA，后序序列为DCBA，可知A为根结点，BDC为左侧结点，C是B右子结点，D是C右子结点，故前序序列为ABCD，C选项正确"},{"title":"设数据集合为D\u003d{1,3,5,7,9}，D上的关系为R，下列数据结构B\u003d（D，R）中为非线性结构的是（ ）。","chooseList":[{"title":"R\u003d{(5,1),(7,9),(1,7),(9,3)}","index":0,"selected":false},{"title":"R\u003d{(9,7),(1,3),(7,1),(3,5)}","index":1,"selected":false},{"title":"R\u003d{(1,9),(9,7),(7,5),(5,3)}","index":2,"selected":false},{"title":"R\u003d{(1,3),(3,5),(5,9)}","index":3,"selected":false}],"mode":0,"answer":3,"parse":"A选项，5为根结点，线性表为51793；B选项，9为根结点，线性表为97135；C选项，1为根结点，线性表为19753；D选项，结点1与7都是根结点，属于非线性结构，D正确。"},{"title":"若想给已定义为int型的变量a，b，c，d赋值为1，以下选项中错误的语句是（ ）。","chooseList":[{"title":"d\u003d1,c\u003dd,b\u003dc,a\u003db;","index":0,"selected":false},{"title":"a\u003db\u003dc\u003dd\u003d1;","index":1,"selected":false},{"title":"a\u003d1,b\u003da,c\u003db,d\u003dc;","index":2,"selected":false},{"title":"a\u003db,b\u003dc,c\u003dd,d\u003d1;","index":3,"selected":false}],"mode":0,"answer":3,"parse":"赋值是将一个常量的值赋给一个变量，在D选项中，变量b的值相当于一个未知的数，用b对a赋值不满足题目要求。"}]}