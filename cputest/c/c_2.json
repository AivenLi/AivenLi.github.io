{"code":0,"msg":"success","data":[{"title":"在C语言中，以___作为字符串结束标志。","chooseList":[{"title":"\u0027\\n\u0027","index":0,"selected":false},{"title":"\u0027\u0027","index":1,"selected":false},{"title":"\u00270\u0027","index":2,"selected":false},{"title":"\u0027\\0\u0027","index":3,"selected":false}],"mode":0,"answer":3,"parse":"在C语言中，\u0027\\0\u0027是字符串的结束标志。"},{"title":"下列选项中，合法的一组C语言常量是（ ）。","chooseList":[{"title":"100 0xa0 4.2e0","index":0,"selected":false},{"title":"080 4e-2 -0xab","index":1,"selected":false},{"title":"145 9e5.3 0xff","index":2,"selected":false},{"title":"0xabcd 15,5f 0.5e4","index":3,"selected":false}],"mode":0,"answer":0,"parse":"C语言中八进制整型常量的开头是数字0，十六进制整型常量的开头是0x。C语言中的实型常量有两种表示形式：小数形式和指数形式，其中小数形式表示的实型常量必须要有小数点；指数形式以e（E）后跟一个整数来表示以10为底的冥，且规定字母e（E）之前必须有数字，e（E）后的数必须为整数。B选项的080表示八进制数，但是八进制数没有8,B错误；C选项的e后面是小数，C错误；D选项的第二个数有逗号，D错误。"},{"title":"某棵树只有度为3的结点和叶子结点，其中度为3的结点有8个，则该树中的叶子结点数为（ ）。","chooseList":[{"title":"16","index":0,"selected":false},{"title":"17","index":1,"selected":false},{"title":"18","index":2,"selected":false},{"title":"不存在这样的树","index":3,"selected":false}],"mode":0,"answer":1,"parse":"度为3的子结点共有3*8\u003d24个，再加上1个根结点，故该树共有25个结点，因为度为3的结点有8个，所以度为0的结点有25-8\u003d17个。"},{"title":"下列数据中属于“字符串常量”的是（ ）。","chooseList":[{"title":"\"a\"","index":0,"selected":false},{"title":"{ABC}","index":1,"selected":false},{"title":"\u0027abc\\0\u0027","index":2,"selected":false},{"title":"\u0027a\u0027","index":3,"selected":false}],"mode":0,"answer":0,"parse":"在C语言中，用单引号表示字符，用双引号表示字符串，B、C错误，D是表示字符，错误。"},{"title":"下列叙述中正确的是（ ）。","chooseList":[{"title":"数据库系统能够管理各种类型的文件，而文件系统只能管理程序文件","index":0,"selected":false},{"title":"数据库系统可以解决数据冗余和数据独立性问题，而文件系统不能","index":1,"selected":false},{"title":"数据库系统独立性较差，而文件系统独立性较好","index":2,"selected":false},{"title":"数据库系统可以管理庞大的数据量，而文件系统管理的数据量较少","index":3,"selected":false}],"mode":0,"answer":1,"parse":""},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint mul(int *a, int n)\n{\nint i,r\u003d1;\nfor(i\u003d0;i\u003c\u003dn;i++)\nr\u003dr*a[i];\nreturn r;\n}\nint main(void){\nint x,a[]\u003d{1,2,3,4,5,6,7,8,9};\nx\u003dmul(a,5);\nprintf(\"%d\\n\", x);\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"5","index":0,"selected":false},{"title":"21","index":1,"selected":false},{"title":"120","index":2,"selected":false},{"title":"720","index":3,"selected":false}],"mode":0,"answer":3,"parse":"从mul函数中可以看出函数功能是一个对数组的前n+1（注意for循环是i\u003c\u003dn）个元素求累积，n\u003d5，所以结果是1*2*3*4*5*6\u003d720。"},{"title":"有以下程序\n#include \u003cstdio.h\u003e\n#define S(x) x*x/x\nint main(void){\nint k\u003d6,j\u003d3;\nprintf(\"%d,%d\\n\", S(k+j+2), S(j+k+2));\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"11,11","index":0,"selected":false},{"title":"29,29","index":1,"selected":false},{"title":"26,29","index":2,"selected":false},{"title":"121,121","index":3,"selected":false}],"mode":0,"answer":0,"parse":"该题主要是考宏定义的展开，S(k+j+2)展开如下：k+j+2*k+j+2/k+j+2\u003d29，下一个也是如此展开，选B。"},{"title":"以下是正确C语言标识符的是。","chooseList":[{"title":"2x","index":0,"selected":false},{"title":"a\u00269","index":1,"selected":false},{"title":"c#","index":2,"selected":false},{"title":"_a12b_","index":3,"selected":false}],"mode":0,"answer":3,"parse":"C语言标识符只能以字母或下划线开头，A错误；C语言标识符只能由字母、下划线和数字组成，BC错误。"},{"title":"若有以下代码片段\nint x,y;\nfor(x\u003d30,y\u003d0;x\u003e\u003d10,y\u003c10;x--,y++)\nx/\u003d2,y+\u003d2;\nprintf(\"x\u003d%d,y\u003d%d\\n\",x,y);\n则输出结果为（ ）","chooseList":[{"title":"x\u003d30,y\u003d0","index":0,"selected":false},{"title":"x\u003d0,y\u003d30","index":1,"selected":false},{"title":"x\u003d12,y\u003d0","index":2,"selected":false},{"title":"x\u003d0,y\u003d12","index":3,"selected":false}],"mode":0,"answer":3,"parse":"逗号运算符只取最右边的结果，所以本题结束循环的条件时y\u003e\u003d10，而每次循环x\u003dx/2-1，y\u003dy+3；可知当y\u003d12时结束循环，循环执行了4次，x\u003d0。"},{"title":"设有定义：\nstruct complex {int real,unreal;\n}\ndata1\u003d{1,8},\ndata2;\n则以下赋值语句中错误的是（ ）。","chooseList":[{"title":"data2\u003d(2,6);","index":0,"selected":false},{"title":"data2\u003ddata1;","index":1,"selected":false},{"title":"data2.real\u003ddata1.real;","index":2,"selected":false},{"title":"data2.real\u003ddata1.unreal;","index":3,"selected":false}],"mode":0,"answer":0,"parse":"变量声明时可以同时赋值，变量声明结束后，需要单独赋值。A选项可以改为data2.real\u003d2;data2.unreal\u003d6;。"},{"title":"若有定义：int a,b,c; 则以下代码的输出结果是（ ）。\na\u003d11;b\u003d3;c\u003d0;\nprintf(\"%d\\n\",c\u003d(c\u003da/b,c/b));","chooseList":[{"title":"0","index":0,"selected":false},{"title":"1","index":1,"selected":false},{"title":"2","index":2,"selected":false},{"title":"3","index":3,"selected":false}],"mode":0,"answer":1,"parse":"逗号表达式从左往右计算，结果取最右边的值。第一个表达式中c\u003d3，所以第二个表达式的为3/3\u003d1。"},{"title":"下列关于栈的叙述正确的是（ ）。","chooseList":[{"title":"不能删除数据","index":0,"selected":false},{"title":"只能在栈低插入数据","index":1,"selected":false},{"title":"栈按“先进先出”组织数据","index":2,"selected":false},{"title":"栈按“先进后出组织数据","index":3,"selected":false}],"mode":0,"answer":3,"parse":"数据都是从栈顶插入和取出数据，即先进后出。"},{"title":"以下代码片段的输出结果是（ ）。\nint i\u003d0,k\u003d2;\nfor(i\u003d0;i\u003c10;i++){\nif(k\u003di){\nbreak;\n}\n}\nprintf(\"%d\\n\",k);","chooseList":[{"title":"0","index":0,"selected":false},{"title":"1","index":1,"selected":false},{"title":"9","index":2,"selected":false},{"title":"10","index":3,"selected":false}],"mode":0,"answer":1,"parse":"注意if语句，是k\u003di，而不是k\u003d\u003di，第一次循环把i（i\u003d0）的值赋给k，k的值为0，if(0)不满足条件；第二次k\u003d1，执行if下的语句break跳出循环，所以输出结果为1。"},{"title":"算法的有穷性是指（ ）。","chooseList":[{"title":"算法程序的运行时间是有限的","index":0,"selected":false},{"title":"算法程序所处理的数据量是有限的","index":1,"selected":false},{"title":"算法程序的长度是有限的","index":2,"selected":false},{"title":"算法只能被有限的用户使用","index":3,"selected":false}],"mode":0,"answer":0,"parse":"算法原则上能够精确地运行，而且人们用笔和纸做有限次运算后即可完成。有穷性是指算法程序的运行时间是有限的"},{"title":"关于程序模块化，以下叙述错误的是（ ）。","chooseList":[{"title":"程序模块化可以提高程序运行的效率","index":0,"selected":false},{"title":"程序模块化可以提高程序编制的效率","index":1,"selected":false},{"title":"程序模块化可以提高调试程序的效率","index":2,"selected":false},{"title":"程序模块化可以提高程序代码复用率","index":3,"selected":false}],"mode":0,"answer":0,"parse":"高级语言是为了方便编写代码，最后最会被编译成机器语言，所以程序模块化是为了方便编写，无法提高程序运行效率。"},{"title":"在C语言中，运算对象必须是整型数的运算符是（ ）。","chooseList":[{"title":"%","index":0,"selected":false},{"title":"\\","index":1,"selected":false},{"title":"%和\\","index":2,"selected":false},{"title":"**","index":3,"selected":false}],"mode":0,"answer":0,"parse":"在C语言中，%运算符两侧的运算数必须是整型。"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main(void){\nchar w[20],a[5][10]\u003d{\n\"abcde\",\n\"fghij\",\n\"klmno\",\n\"pqrst\",\n\"uvwxy\"};\nint i;\nfor(i\u003d0;i\u003c5;i++)\nw[i]\u003da[i][i];\nw[5]\u003d\u0027\\0\u0027;\nprintf(\"%s\\n\", w);\nreturn 0;\n}\n程序运行后的输出结果是（ ）。","chooseList":[{"title":"eimqu","index":0,"selected":false},{"title":"ejoty","index":1,"selected":false},{"title":"afkpu","index":2,"selected":false},{"title":"agmsy","index":3,"selected":false}],"mode":0,"answer":3,"parse":"程序中for循环是将数组a的对角线的各个字母依次赋值给数组w。"},{"title":"若有以下代码片段\ndouble x,y,z;\nscanf(\"%lf%lf\",\u0026x,\u0026y );\nz\u003dx/y;\nwhile(1)\n  if(fabs(z)\u003e1.0)\n{\n  x\u003dy;y\u003dx;z\u003dx/y;\n  }\n  else\n  break;\nprintf(\"y\u003d%f\\n\",y);\n执行时输入：1.2 1.5\u003cCR\u003e，则输出结果为（ ）","chooseList":[{"title":"0.300000","index":0,"selected":false},{"title":"1.200000","index":1,"selected":false},{"title":"1.500000","index":2,"selected":false},{"title":"2.700000","index":3,"selected":false}],"mode":0,"answer":2,"parse":"看if里面的代码：“x\u003dy;y\u003dx;...”执行这段代码之后x和y的值就都是y最开始被赋予的值了，而程序是输出y，所以无论怎么循环结果一定都是y最开始被赋予的值。"},{"title":"某循环队列的存储空间为Q(1:m)，初始状态为front\u003drear\u003dm。现经过一系列的入队操作和退队操作后，front\u003dm，rear\u003dm-1，则该循环队列中的元素个数为（ ）。","chooseList":[{"title":"m-1","index":0,"selected":false},{"title":"m","index":1,"selected":false},{"title":"1","index":2,"selected":false},{"title":"0","index":3,"selected":false}],"mode":0,"answer":0,"parse":"判断循环队列元素个数的公式n\u003d（rear-front）+容量）%m，所以结果是n\u003d（m-1-m+m）%m\u003d（m-1）%m，结果是m-1。"},{"title":"关于函数返回值，以下叙述正确的是（ ）","chooseList":[{"title":"函数只能返回基本数据类型的数值或指针","index":0,"selected":false},{"title":"函数可以返回整个结构体，即使结构体中有数组","index":1,"selected":false},{"title":"函数不可以返回一个数组","index":2,"selected":false},{"title":"函数不能没有返回值","index":3,"selected":false}],"mode":0,"answer":1,"parse":"函数可以返回结构体类型，A错误；函数不能返回数组，C错误，函数可以没有返回值，D错误。"},{"title":"在C语言中，以下变量定义正确的是（ ）。","chooseList":[{"title":"float a[8]\u003d{1.0,2.0};","index":0,"selected":false},{"title":"int b[1]\u003d{0,1};","index":1,"selected":false},{"title":"char c[]\u003d{\"A\",\"B\"};","index":2,"selected":false},{"title":"char d\u003d\u003d\"1\";","index":3,"selected":false}],"mode":0,"answer":0,"parse":"B选项的变量b的长度为1，初始化却有两个元素，B错；定义char类型的数组并初始化时有两种方式：用双引号括起来（char a[]\u003d\"AB\";）；或者用花括号括起来，其中的元素用单引号括起来（char a[]\u003d{\u0027A\u0027,\u0027B\u0027};）,故C错；D中多了一个等号，D错。"},{"title":"以下选项中不能作为C语言的合法常量的是（ ）。","chooseList":[{"title":"12340.0","index":0,"selected":false},{"title":"0x1234","index":1,"selected":false},{"title":"123e0.4","index":2,"selected":false},{"title":"1234.5f","index":3,"selected":false}],"mode":0,"answer":2,"parse":"在C语言中，用e表示法时，e前必须有数字，e后必须为整数。A、D均为浮点数，B是整数，十六进制表示法"},{"title":"某二叉树共有530个结点，其中度为2的结点有250个，则度为1的结点数为（ ）。","chooseList":[{"title":"29","index":0,"selected":false},{"title":"30","index":1,"selected":false},{"title":"249","index":2,"selected":false},{"title":"251","index":3,"selected":false}],"mode":0,"answer":0,"parse":"由题意知度为0的结点为250+1\u003d251；所以度为1的结点为：530-250-251\u003d29个"},{"title":"若有定义\ntypedef int *T[10];\nT a;\n则以下选项与上述定义中a的类型完全相同的是（ ）。","chooseList":[{"title":"int (*a)[10];","index":0,"selected":false},{"title":"int *a[10];","index":1,"selected":false},{"title":"int (*a[10])()","index":2,"selected":false},{"title":"int a[10];","index":3,"selected":false}],"mode":0,"answer":1,"parse":"T先和[]结合，T是一个数组，再和*结合，表示T的每一个元素都是指针，类型是int，即T是一个指向int类型的指针数组。选项A中，a是一个指针，指向大小为10类型为int的数组（数组指针），与题目的a类型不符；C选项中，(*a[10])是一个指针数组，再和()结合，表示a的每个元素都指向返回类型为int的函数（称为函数指针数组），C错，D选项中a是一个数组，D错；故选B"},{"title":"在数据库设计中，将E-R图转换成关系数据模型的过程属于（ ）。","chooseList":[{"title":"需求分析阶段","index":0,"selected":false},{"title":"逻辑设计阶段","index":1,"selected":false},{"title":"物理设计阶段","index":2,"selected":false},{"title":"概念设计阶段","index":3,"selected":false}],"mode":0,"answer":1,"parse":"E-R图转换成关系模型数据则是把图形分析出来的联系反映的数据库中，即设计出表，所以属于逻辑阶段。"},{"title":"若有定义：int a,b,c; 则以下代码的输出结果是（ ）。\na\u003d11;b\u003d3;c\u003d0;\nprintf(\"%d\\n\",c\u003d(c/a,a%b));","chooseList":[{"title":"0","index":0,"selected":false},{"title":"1","index":1,"selected":false},{"title":"2","index":2,"selected":false},{"title":"3","index":3,"selected":false}],"mode":0,"answer":2,"parse":"逗号表达式从左往右计算，结果取最右边的值。"},{"title":"下列叙述中错误的是。","chooseList":[{"title":"数据结构中的数据元素不能是另一数据结构","index":0,"selected":false},{"title":"数据结构中的数据元素可以是另一数据结构","index":1,"selected":false},{"title":"空数据结构可以是线性结构也可以是非线性结构","index":2,"selected":false},{"title":"非空数据结构可以没有根结点","index":3,"selected":false}],"mode":0,"answer":0,"parse":"数据结构中的元素可以是另一种数据结构"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main(void){\nchar a,b,c,d;\nscanf(\"%c%c\",\u0026a, \u0026b);\nc\u003dgetchar();\nd\u003dgetchar();\nprintf(\"%c%c%c%c\\n\",a,b,c,d);\n}\n当执行程序时，按下列方式输入数据（从第1列开始，\u003cCR\u003e代表回车，注意：回车也是一个字符）\n12\u003cCR\u003e\n34\u003cCR\u003e\n则输出结果是","chooseList":[{"title":"12","index":0,"selected":false},{"title":"12\n3","index":1,"selected":false},{"title":"1234","index":2,"selected":false},{"title":"12\n34","index":3,"selected":false}],"mode":0,"answer":1,"parse":"执行scanf时，分别将1和2赋值给a和b，当执行c\u003dgetchar()时将后面的回车键赋值给了变量c，然后将3赋值给了变量d。%c和getchar都表示获取一个字符。"},{"title":"若某二叉树中的所有结点值均大于其左子树上的所有结点值，且小于右子树上的所有结点值，则该二叉树遍历序列中有序的是（ ）。","chooseList":[{"title":"前序序列","index":0,"selected":false},{"title":"中序序列","index":1,"selected":false},{"title":"后序序列","index":2,"selected":false},{"title":"都可以","index":3,"selected":false}],"mode":0,"answer":1,"parse":"中序遍历时，先遍历左子树，再遍历根节点，最后遍历右子树。而左子树结点值 \u003c 根节点节点值 \u003c 右子树节点值，所以有序"},{"title":"对长度为n的线性表排序，在最坏情况下，比较次数不是n(n-1)/2的排序方法是（ ）。","chooseList":[{"title":"堆排序","index":0,"selected":false},{"title":"冒泡排序","index":1,"selected":false},{"title":"快速排序","index":2,"selected":false},{"title":"直接插入排序","index":3,"selected":false}],"mode":0,"answer":0,"parse":"除了堆排序算法的比较次数是nlog2n，其他的都是n(n-1)/2。"},{"title":"已知char x[]\u003d\"hello\",y[]\u003d{\u0027h\u0027,\u0027e\u0027,\u0027a\u0027,\u0027b\u0027,\u0027e\u0027};，则关于两个数组长度的正确描述是（ ）。","chooseList":[{"title":"相同","index":0,"selected":false},{"title":"x\u003ey","index":1,"selected":false},{"title":"x\u003cy","index":2,"selected":false},{"title":"以上答案都不对","index":3,"selected":false}],"mode":0,"answer":1,"parse":"对一维数组初始化时可采用字符串的形式（例如本题数组x），也可采用字符集合的形式（例如本题数组y）。在以字符串形式初始化时，数组x不尽要存储字符串中的字符，还要存储字符串后的结束标志位，因此数组x的长度为6；在以字符集合形式初始化时，数组y，仅存储集合中的元素，因此数组y长度为5。"},{"title":"软件生命周期是指（ ）。","chooseList":[{"title":"软件的定义和开发阶段","index":0,"selected":false},{"title":"软件的需求分析、设计与实现阶段","index":1,"selected":false},{"title":"软件的开发阶段","index":2,"selected":false},{"title":"软件产品从提出、实现、使用维护到停止使用退役的过程","index":3,"selected":false}],"mode":0,"answer":3,"parse":""},{"title":"若文件指针fp已正确指向文件，ch为字符型变量，以下不能把字符输出到文件中的语句是（ ）。","chooseList":[{"title":"fget(fp,ch);","index":0,"selected":false},{"title":"fputc(ch,fp);","index":1,"selected":false},{"title":"fprintf(fp,\"%c\",ch);","index":2,"selected":false},{"title":"fwrite(\u0026ch,sizeof(ch),1,fp);","index":3,"selected":false}],"mode":0,"answer":0,"parse":"函数fgetc的原型是：int fgetc(FILE*)，功能是从参数FILE*指向的文件中读取一个字符；函数的功能是将一个字符写入参数FILE*指向的文件中；fprintf函数是数据格式化写入参数FILE*指向的文件中，fwrite函数是将数据以二进制形式定量的写入参数FILE*指向的文件中。"},{"title":"将C语言的整数设为整数类I，则下面属于类I实例的是（ ）。","chooseList":[{"title":"-103","index":0,"selected":false},{"title":"10E3","index":1,"selected":false},{"title":"10.3","index":2,"selected":false},{"title":"\"0103\"","index":3,"selected":false}],"mode":0,"answer":0,"parse":"A选项中表示的是整数-103，正确；B、C选项是实数（浮点数），错误；D是字符串，错误。"},{"title":"若有定义\ndouble a\u003d11.3;int i\u003d0;k\u003d20;\n则不符合C语言规定的赋值语句是（ ）。","chooseList":[{"title":"i\u003d(a+k)\u003c\u003d(i+k);","index":0,"selected":false},{"title":"i\u003da%11;","index":1,"selected":false},{"title":"a\u003da++,i++;","index":2,"selected":false},{"title":"i\u003d!a;","index":3,"selected":false}],"mode":0,"answer":1,"parse":"取余运算符的左右表达式的结果均必须为整型的数。B选项中的a是实数，故B错误，所以选B。"},{"title":"以下叙述中错误的是（ ）。","chooseList":[{"title":"C语言源程序经编译后生成后缀为.obj的目标程序","index":0,"selected":false},{"title":"用C语言编写的程序称为源程序，它以ASCII码形式存放在一个文本文件中","index":1,"selected":false},{"title":"C语言中的每条可执行语句和非执行语句最终都将被转换成二进制的机器指令","index":2,"selected":false},{"title":"C语言程序经过编译、链接步骤后才能形成一个真正可执行的二进制机器指令文件","index":3,"selected":false}],"mode":0,"answer":2,"parse":"C语言中的非执行语句不会被编译，不会生成二进制的机器指令，A错误。"},{"title":"为了降低算法的空间复杂度，要求算法尽量采用原地工作(in place)。所谓原地工作是指（ ）。","chooseList":[{"title":"执行算法时所使用的额外空间固定（即不随算法所处理的数据空间大小的变化而变化）","index":0,"selected":false},{"title":"执行算法时所使用的额外空间随算法所处理的数据空间大小的变化而变化","index":1,"selected":false},{"title":"执行算法时不使用额外空间","index":2,"selected":false},{"title":"执行算法时不使用任何存储空间","index":3,"selected":false}],"mode":0,"answer":0,"parse":"不随算法所处理的数据空间大小的变化而变化"},{"title":"下列叙述中正确的是（ ）。","chooseList":[{"title":"软件是程序、数据和文档的集合","index":0,"selected":false},{"title":"软件是程序和数据的集合","index":1,"selected":false},{"title":"软件是算法和数据结构的集合","index":2,"selected":false},{"title":"软件是算法和程序的集合","index":3,"selected":false}],"mode":0,"answer":0,"parse":""},{"title":"有以下程序。\n#include\u003cstdio.h\u003e\nvoid change(char *a, int len) {\nfor(len--; len\u003e\u003d0; len--)\na[len] +\u003d 1;\n}\nint main(void) {\nint i;\nchar a[5] \u003d \"ABCD\";\nchange(a,4);\nfor(i\u003d0;i\u003c4;i++)\nprintf(\"%c,\",a[i]);\n}\n程序运行后的输出结果是","chooseList":[{"title":"B,C,D,E,","index":0,"selected":false},{"title":"A,B,C,D,","index":1,"selected":false},{"title":"B,D,F,H,","index":2,"selected":false},{"title":"C,D,E,F,","index":3,"selected":false}],"mode":0,"answer":0,"parse":"在change函数中，len\u003d4，for循环的第一个表达式使len\u003d3，a[3]\u003da[3]+1\u003dE，后三次循环也是让数组a的各个元素加1，最后数组的元素分别为：B、C、D、E。"},{"title":"语句printf(\"%d\\n\",strlen(\"\\t\\\"\\\\n\\\u0027\\065\\08AB\"));\n的输出结果是（ ）。","chooseList":[{"title":"5","index":0,"selected":false},{"title":"6","index":1,"selected":false},{"title":"7","index":2,"selected":false},{"title":"9","index":3,"selected":false}],"mode":0,"answer":1,"parse":"strlen函数在遍历字符串时遇到\u0027\\0\u0027时返回已统计的字符串长度（不包括\u0027\\0\u0027）。而题中的第一个\\0中的0其实是和65结合，表示八进制数，第二个\\0并不和8结合（八进制数中并没有8），所以8是一个单独的字符，于是函数返回，字符串长度为6。"}]}