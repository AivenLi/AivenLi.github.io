{"code":0,"msg":"success","data":[{"title":"若有以下定义和语句\nchar s1[10]\u003d\"abcd!\",*s2\u003d\"\\n123\\\\\";\nprintf(\"%d %d\\n\",strlen(s1),strlen(s2));\n侧输出结果是（ ）。","chooseList":[{"title":"10 7","index":0,"selected":false},{"title":"10 5","index":1,"selected":false},{"title":"5 5","index":2,"selected":false},{"title":"5 8","index":3,"selected":false}],"mode":0,"answer":2,"parse":"strlen函数返回字符串的长度，遇到\u0027\\0\u0027时返回，故选C"},{"title":"以下选项中叙述错误的是（ ）。","chooseList":[{"title":"C程序函数的形参不可以说明为static型变量","index":0,"selected":false},{"title":"C程序函数中定义的自动变量，系统不自动赋确定的初值","index":1,"selected":false},{"title":"C程序函数中定义的赋有初值的静态变量，每调用一次函数，赋一次初值","index":2,"selected":false},{"title":"在C程序的同一函数中，个复合语句内可以定义变量，其作用域仅限本复合语句内","index":3,"selected":false}],"mode":0,"answer":2,"parse":"static修饰的变量只会初始化一次，以后保留上次的值，C错误，故选C"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main(void) {\nint x;\nscanf(\"%d\",\u0026x);\nif(x\u003c\u003d3);\nelse\nif(x!\u003d10) printf(\"%d\\n\",x);\nreturn 0;\n}\n程序运行时，输入的值在哪个范围才会有输出结果（ ）。","chooseList":[{"title":"小于3的整数","index":0,"selected":false},{"title":"不等于10的整数","index":1,"selected":false},{"title":"大于或等于10的整数","index":2,"selected":false},{"title":"大于且不等于10的整数","index":3,"selected":false}],"mode":0,"answer":3,"parse":"根据代码可知如果x的值小于3，执行空语句，不进行打印操作。如果x的值大于3，再判断x的值是否不等于10，如果不等于10就打印x的值，所以选D"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main() {\nchar b,c;\nint i;\nb\u003d\u0027a\u0027;c\u003d\u0027A\u0027;\nfor(i\u003d0;i\u003c6;i++){\nif(i%2) putchar(i+b);\nelse putchar(i+c);\n}\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后输出结果为（ ）。","chooseList":[{"title":"abcdef","index":0,"selected":false},{"title":"ABCDEF","index":1,"selected":false},{"title":"aBcDeF","index":2,"selected":false},{"title":"AbCdEf","index":3,"selected":false}],"mode":0,"answer":3,"parse":"for循环中如果i的值能被2整除，以字符格式打印输出i+c的值，如果i的值不能被2整除打印i+b的值。i的值为0、2、4时打印i+c；为1、3、5时打印i+b，故选D"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint fun(int a,int B){\nif(B\u003d\u003d0) return a;\nelse return(fun(--a,--B));\n}\nint main(){\nprintf(\"%d\\n\",fun(4,2));\nreturn 0;\n}\n程序运行后输出结果为（ ）。","chooseList":[{"title":"1","index":0,"selected":false},{"title":"2","index":1,"selected":false},{"title":"3","index":2,"selected":false},{"title":"4","index":3,"selected":false}],"mode":0,"answer":1,"parse":"本题重点考查函数的递归调用；题目给出的fun函数直接调用了自身，所以是一个递归函数。其功能是：当参数B为0时，返回参数a的值，否则返回fun(--a,--B)的值。从这里可以看出，当B不断递减时，a也不断递减，直到B为0时返回a的值。那么a递减的总值就是B原来的值。故选B"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nstruct S{int n; int a[20];};\nvoid f(int *a,int n) {\nint i;\nfor(i\u003d0;i\u003cn-1;i++) a[i]+\u003di;\n}\nint main() {\nint i;\nstruct S s\u003d{10,{2,3,1,6,8,7,5,4,10,9}};\nf(s.a,s.n);\nfor(i\u003d0;i\u003cs.n;i++) printf(\"%d,\",s.a[i]);\nreturn 0;\n}\n程序运行后输出结果为（ ）。","chooseList":[{"title":"2,3,1,6,8,7,5,4,10,9,","index":0,"selected":false},{"title":"3,4,2,7,9,8,6,5,11,10,","index":1,"selected":false},{"title":"2,4,3,9,12,12,11,11,18,9,","index":2,"selected":false},{"title":"1,2,3,6,8,7,5,4,10,9,","index":3,"selected":false}],"mode":0,"answer":2,"parse":"题目中定义了一个结构体类型S，然后定义了一个结构体变量s并初始化，执行f函数后，将s中元素a的每个元素都加上i，i的值从0~9，这里需要注意，最后一个元素没有加i，所以最终答案为C选项"},{"title":"下列关于线性链表的叙述中，正确的是（ ）。","chooseList":[{"title":"各数据结点的存储空间可以不连续，但它们的存储顺序与逻辑顺序必须一致","index":0,"selected":false},{"title":"各数据结点的存储顺序与逻辑顺序可以不一致，但它们的存储空间必须连续","index":1,"selected":false},{"title":"进行插入与删除时，不需要移动表中的元素","index":2,"selected":false},{"title":"以上说法均不正确","index":3,"selected":false}],"mode":0,"answer":2,"parse":"一般来说，在线性表的链式存储结构中，各数据结点的存储序号是不连续的，并且各结点在存储空间中的位置关系与逻辑关系也不一致。线性链表中数据的插入和删除都不需要移动表中的元素，只需改变结点的指针域即可"},{"title":"以下选项中正确的语句组是（ ）。","chooseList":[{"title":"char *s; s\u003d{\"MATH\"};","index":0,"selected":false},{"title":"char *s; s\u003d\"MATH\";","index":1,"selected":false},{"title":"char s[10];s\u003d\"MATH\";","index":2,"selected":false},{"title":"char s[];s\u003d\"MATH\";","index":3,"selected":false}],"mode":0,"answer":1,"parse":"A选项中去掉花括号就正确了，C和D选项应该在定义时初始化。在C语言中，字符串是特殊的指针，而指针（同级）之间的赋值可以直接使用等号，故选B"},{"title":"有以下函数\nint a(char *s) {\nchar *t\u003ds;\nwhile(*t++);\nt--;\nreturn(t-s);\n}\n以下关于函数a功能正确的是（ ）。","chooseList":[{"title":"将串s复制到串t","index":0,"selected":false},{"title":"比较两个串的大小","index":1,"selected":false},{"title":"求字符串s的长度","index":2,"selected":false},{"title":"求字符串s所占的字节数","index":3,"selected":false}],"mode":0,"answer":2,"parse":"本题重点考查的知识点while循环语句的应用。a函数中，while让t指向s的末尾（\u0027\\0\u0027），然后再指向\u0027\\0\u0027的前一个，此时t指向末尾，s指向开头，返回t-s即字符串的长度。"},{"title":"若要求定义具有10个int类型元素的一维数组a，则以下定义语句中错误的是（ ）。","chooseList":[{"title":"#define n 5\nint a[2*n];","index":0,"selected":false},{"title":"int n\u003d10,a[n];","index":1,"selected":false},{"title":"int a[5+5];","index":2,"selected":false},{"title":"#define N 10\nint a[N];","index":3,"selected":false}],"mode":0,"answer":1,"parse":"定义数组时[]里的数必须是一个常量，B错误，选B"},{"title":"在黑盒测试方法中，设计测试用例的主要根据是（ ）。","chooseList":[{"title":"程序内部逻辑","index":0,"selected":false},{"title":"程序外部功能","index":1,"selected":false},{"title":"程序数据结构","index":2,"selected":false},{"title":"程序流程图","index":3,"selected":false}],"mode":0,"answer":1,"parse":"黑盒测试是对软件已经实现的功能是否满足需求进行测试和验证，黑盒测试完全不考虑程序内部的逻辑结构和内部特性，只根据程序的需求和功能规格说明，检查程序的功能是否符合它的功能说明，故选B"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main() {\nint i, t[][3]\u003d{9,8,7,6,5,4,3,2,1};\nfor(i\u003d0;i\u003c3;i++) printf(\"%d\", t[2-i][i]);\nreturn 0;\n}\n程序运行后输出结果为（ ）。","chooseList":[{"title":"3 5 7","index":0,"selected":false},{"title":"7 5 3","index":1,"selected":false},{"title":"3 6 9","index":2,"selected":false},{"title":"7 5 1","index":3,"selected":false}],"mode":0,"answer":0,"parse":"二维数组t[][3]实际上是t[3][3]\u003d{{9,8,7},{6,5,4},{3,2,1}}，通过for循环分别得到i\u003d0（t[2][0]\u003d3）、i\u003d1（t[1][1]\u003d5）和i\u003d2（t[0][2]\u003d7）的值，选A"},{"title":"下列关于算法叙述正确的是（ ）。","chooseList":[{"title":"算法就是程序","index":0,"selected":false},{"title":"设计算法时只需要考虑结果的可靠性","index":1,"selected":false},{"title":"设计算法时只需要考虑数据结构的设计","index":2,"selected":false},{"title":"设计算法时要考虑时间复杂度和空间复杂度","index":3,"selected":false}],"mode":0,"answer":3,"parse":"算法是指解题方案的准确而完整的描述，算法不等于程序，也不等于计算方法；设计算法时不仅要考虑对数据对象的运算和操作，还要考虑算法的控制结构，故选D"},{"title":"在软件设计中不使用的工具是（ ）。","chooseList":[{"title":"系统结构图","index":0,"selected":false},{"title":"PAD图","index":1,"selected":false},{"title":"数据流图（DFD图）","index":2,"selected":false},{"title":"程序流程图","index":3,"selected":false}],"mode":0,"answer":2,"parse":"系统结构是对软件系统结构的总体设计的图形显示。在需求分析阶段，已经从系统开发的角度出发，把系统按功能逐次分割层次结构，是在概要设计阶段用到的。PAD图是在详细设计阶段用到的。程序流程图是对程序流程的图形表示，在详细设计过程中用到。数据流图是结构化分析方法中使用的工具，它以图形的方式描绘数据在系统中流动和处理的过程，由于它只反映系统必须完成的逻辑功能，所以它是一种功能模型，是在可行性研究阶段用到的而非软件设计时用到的。故选C"},{"title":"如有下程序段\nint x\u003d12;\ndouble y\u003d3.141593;\nprintf(\"%d%8.6f\",x,y);\n其输出结果是（ ）。","chooseList":[{"title":"123.141593","index":0,"selected":false},{"title":"12 3.141593","index":1,"selected":false},{"title":"12,3.141593","index":2,"selected":false},{"title":"123.1415930","index":3,"selected":false}],"mode":0,"answer":0,"parse":"printf函数中格式字符“%8.6”的含义是变量的输出宽度为8（包括小数点），小数点后面保留6位小数，且右对齐，故选A"},{"title":"下列叙述中正确的是（ ）。","chooseList":[{"title":"双向链表是非线性结构","index":0,"selected":false},{"title":"循环链表是非线性结构","index":1,"selected":false},{"title":"只有一个根结点的数据结构不一定是线性结构","index":2,"selected":false},{"title":"有一个以上根结点的数据结构不一定是非线性结构","index":3,"selected":false}],"mode":0,"answer":2,"parse":"线性结构应该满足：有且只有一个根结点与每个结点最多有一个前驱和一个后继；所以有一个以上根结点的数据结构一定是非线性结构；循环链表和双向链表都是线性结构的数据结构。故选C"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nvoid fun(int *s,int n1,int n2) {\nint i,j,t;\ni\u003dn1;j\u003dn2;\nwhile(i\u003cj){\nt\u003ds[i];s[i]\u003ds[j];s[j]\u003dt;\ni++;j--;\n}\n}\nint main() {\nint a[]\u003d{1,2,3,4,5,6,7,8,9,0},k;\nfun(a,0,3);\nfun(a,4,9);\nfun(a,0,9);\nfor(k\u003d0;k\u003c10;k++){\nprintf(\"%d\",a[k]);\nprintf(\"\\n\");\nreturn 0;\n}\n程序运行后输出结果为（ ）。","chooseList":[{"title":"4321098765","index":0,"selected":false},{"title":"5678901234","index":1,"selected":false},{"title":"0987654321","index":2,"selected":false},{"title":"0987651234","index":3,"selected":false}],"mode":0,"answer":1,"parse":"该程序首先给一维数组赋值，然后三次调用fun函数，其中fun函数功能是将一维数组的第n1个元素和第n2个互换，第n1+1和第n2-1个元素互换...；故选B"},{"title":"有以下代码片段\nstruct st{\nint x;int *y;\n}\n *pt;\nint a[]\u003d{1,2},b[]\u003d{3,4};\nstruct st c[2]\u003d{10,a,20,b};\npt\u003dc;\n以下选项中表达式的值为11的是（ ）。","chooseList":[{"title":"++pt-\u003ex","index":0,"selected":false},{"title":"pt-\u003ex","index":1,"selected":false},{"title":"*pt-\u003ey","index":2,"selected":false},{"title":"(pt++)-\u003ex","index":3,"selected":false}],"mode":0,"answer":0,"parse":"本题考查结构体数组以及结构体变量的引用，题目中定义了一个结构体数组c并初始化，指针pt指向c的第一个元素，那么pt-\u003ex为10，++pt-\u003ex为11，*pt-\u003ey为1，(pt++)-\u003ex为20，所以选A"},{"title":"以下关于C语言数据类型使用的叙述中错误的是（ ）。","chooseList":[{"title":"整数类型表示的自然数是准确无误差的","index":0,"selected":false},{"title":"若只处理“真”和“假”两种逻辑值，应使用逻辑类型","index":1,"selected":false},{"title":"若要保存带有多位小数的数据，可使用双精度类型","index":2,"selected":false},{"title":"若要处理如“人员信息”等含有不同类型的相关数据，应自定义结构体类型","index":3,"selected":false}],"mode":0,"answer":1,"parse":"C语言中没有逻辑类型"},{"title":"下面不属于需求分析阶段任务的是（ ）。","chooseList":[{"title":"确定软件系统的功能需求","index":0,"selected":false},{"title":"确定软件系统的性能需求","index":1,"selected":false},{"title":"需求规格说明书评审","index":2,"selected":false},{"title":"制定软件集成测试计划","index":3,"selected":false}],"mode":0,"answer":3,"parse":"需求分析阶段的工作有：需求获取；需求分析；编写需求规格说明书；需求评审，故选D"},{"title":"以下叙述中正确的是（ ）。","chooseList":[{"title":"用C语言编写的程序只能放在一个文件中","index":0,"selected":false},{"title":"C程序书写格式自由，一个语句可以写在多行上","index":1,"selected":false},{"title":"C程序书写严格，要求一行内只能写一个语句","index":2,"selected":false},{"title":"C程序中的注释只能出现在程序的开始位置和语句后面","index":3,"selected":false}],"mode":0,"answer":1,"parse":"C语言编写的程序可以放置于多个程序文件中；C程序中的一行可以有多条；C语言的注释中的注释语句可以与原语句放在一行也可以不放在一行"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nvoid fun1(char *p){\nchar *q;\nq\u003dp;\nwhile(*q!\u003d\u0027\\0\u0027){\n(*q)++;q++;\n}\n}\nint main(){\nchar a[]\u003d{\"Program\"},*p;\np\u003d\u0026a[3];\nfun1(p);\nprintf(\"%s\\n\",a);\nreturn 0;\n}\n程序运行后输出结果为（ ）。","chooseList":[{"title":"Prphsbn","index":0,"selected":false},{"title":"Prohsbn","index":1,"selected":false},{"title":"Progsbn","index":2,"selected":false},{"title":"Program","index":3,"selected":false}],"mode":0,"answer":1,"parse":"(*q)++是q所指向的地址的值加1，q++是指向下一个地址，故选B"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\n#include\u003cstring.h\u003e\ntypedef struct{\nchar name[9];\nchar sex;\nfloat score[2];\n} STU;\nvoid f(STU a){\nSTU b\u003d{\"Zhao\",\u0027m\u0027,85.0,90.0};\nint i;\nstrcpy(a.name,b.name);\na.sex\u003db.sex;\nfor(i\u003d0;i\u003c2;i++) a.score[i]\u003db.score[i];\n}\nint main(){\nSTU c\u003d{\"Qian\",\u0027f\u0027,95.0,92.0};\nf(c);\nprintf(\"%s,%c,%2.0f,%2.0f\\n\",\nc.name,c.sex,c.score[0],c.score[1]);\nreturn 0;\n}\n程序运行后输出结果为（ ）。","chooseList":[{"title":"Zhao,m,85,90","index":0,"selected":false},{"title":"Qian,m,85,90","index":1,"selected":false},{"title":"Zhao,f,95,92","index":2,"selected":false},{"title":"Qian,f,95,92","index":3,"selected":false}],"mode":0,"answer":3,"parse":"本题考查结构体的相关操作以及传值、传址的区别，该题中调用f函数后，会生成参数c的一个副本，而不改变c的值，所以选D"},{"title":"下面描述中，不属于软件危机表现的是（ ）。","chooseList":[{"title":"软件过程不规范","index":0,"selected":false},{"title":"软件开发生产率低","index":1,"selected":false},{"title":"软件质量难以控制","index":2,"selected":false},{"title":"软件成本不断提高","index":3,"selected":false}],"mode":0,"answer":0,"parse":"软件危机主要表现在：软件需求的增长得不到满足；软件开发成本和进度无法控制；软件质量难以保证；软件不可维护或维护程度非常低；软件的成本不断提高；软件开发生产率的提高赶不上硬件的发展和应用需求的增长。故选A"},{"title":"下列叙述中正确的是（ ）。","chooseList":[{"title":"循环队列是队列的一种链式存储结构","index":0,"selected":false},{"title":"循环队列是队列的一种顺序存储结构","index":1,"selected":false},{"title":"循环队列是非线性结构","index":2,"selected":false},{"title":"循环队列是一种逻辑结构","index":3,"selected":false}],"mode":0,"answer":1,"parse":"在实际应用中，队列的顺序存储结构一般采用循环队列的形式"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main() {\nint a\u003d7;\nwhile(a--);\nprintf(\"%d\\n\",a);\nreturn 0;\n}\n程序运行后输出结果为（ ）。","chooseList":[{"title":"-1","index":0,"selected":false},{"title":"0","index":1,"selected":false},{"title":"1","index":2,"selected":false},{"title":"7","index":3,"selected":false}],"mode":0,"answer":0,"parse":"a--的含义是先用后减，所以当a的值为0时跳出循环，然后执行减一操作，此时a的值为-1，选A"},{"title":"已知字符‘A’的ASCII码的值为65，字符变量c1的值是‘A’，c2的值是‘D’。则执行语句\nprintf(\"%d,%d\",c1,c2-2);\n的输出结果是（ ）。","chooseList":[{"title":"65,68","index":0,"selected":false},{"title":"A,68","index":1,"selected":false},{"title":"A,B","index":2,"selected":false},{"title":"65,66","index":3,"selected":false}],"mode":0,"answer":3,"parse":"%d一定打印的是数字，排除B、C选项；A的ASCII码是65，则D的ASCII码是68,68-2\u003d66，故选D"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main(){\nchar a\u003d4;\nprintf(\"%d\\n\",a\u003da\u003c\u003c1);\nreturn 0;\n}\n程序运行后输出结果为（ ）。","chooseList":[{"title":"4","index":0,"selected":false},{"title":"8","index":1,"selected":false},{"title":"16","index":2,"selected":false},{"title":"40","index":3,"selected":false}],"mode":0,"answer":1,"parse":"本题考查位运算，题目中将4向左移一位然后重新赋值给a，4左移一位为8，故选B"},{"title":"一颗二叉树共有25个结点，其中5个是叶子结点，则度为1的结点数为（ ）。","chooseList":[{"title":"4","index":0,"selected":false},{"title":"6","index":1,"selected":false},{"title":"10","index":2,"selected":false},{"title":"16","index":3,"selected":false}],"mode":0,"answer":3,"parse":"根据二叉树的性质3：在任意一颗二叉树中，度为0的叶子结点总是比度为2的结点多一个，所以本题中度为2的结点是5-1\u003d4个，所以度为1的结点的个数是25-5-4\u003d16个"},{"title":"若函数调用时实参为变量，以下关于函数形参的叙述中正确的是（ ）。","chooseList":[{"title":"同名的实参和形参占用同一存储单元","index":0,"selected":false},{"title":"函数的形参和实参分别占用不同的存储单元","index":1,"selected":false},{"title":"形参只是形式上的存在，不占用具体存储单元","index":2,"selected":false},{"title":"函数的实参和其对应的形参占用同一存储单元","index":3,"selected":false}],"mode":0,"answer":1,"parse":"函数调用时的参数传递是按值传递，实参和形参占用不同的内存。"},{"title":"以下选项中关于程序模块化的叙述错误的是（ ）。","chooseList":[{"title":"可采用自底向上、逐步细化的设计方法把若干独立模块组装成所要求的程序","index":0,"selected":false},{"title":"把程序分成若干相对独立、功能单一的模块，可便于重复使用这些模块","index":1,"selected":false},{"title":"把程序分成若干相对独立的模块，可便于编码和调试","index":2,"selected":false},{"title":"可采用自顶向下、逐步细化的设计方法把若干独立模块组装成所要求的程序","index":3,"selected":false}],"mode":0,"answer":0,"parse":"程序模块化思想中，可以采用自顶向下、逐步细化的方法。A错误，选A"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main() {\nint i,j,x\u003d0;\nfor(i\u003d0;i\u003c2;i++) {\nx++;\nfor(j\u003d0;j\u003c\u003d3;j++) {\nif(j%2) continue;\n}\nx++;\n}\nprintf(\"x\u003d%d\\n\",x);\nreturn 0;\n}\n程序运行后输出结果为（ ）。","chooseList":[{"title":"4","index":0,"selected":false},{"title":"8","index":1,"selected":false},{"title":"6","index":2,"selected":false},{"title":"12","index":3,"selected":false}],"mode":0,"answer":1,"parse":"continue的作用是跳出循环体中剩余的语句而进行下一次循环。第一次执行外循环i的值为0，执行x++，x的值变为1，第一次执行内存循环j的值为0，不满足if条件，执行x++，x的值为2，第二次内循环j的值为1，满足if条件，跳出本次循环，第三次执行内循环j的值为2，不满足if条件，x的值为3，第四次执行内循环j的值为3，满足if条件跳出本次内循环，x的值加1，即为4，第一次外循环结束。第二次执行外循环时，同理，i的值被加了4次，变为8，所以选B"},{"title":"在下列模式中，能够给出数据库物理存储结构与物理存取方法的是（ ）。","chooseList":[{"title":"外模式","index":0,"selected":false},{"title":"内模式","index":1,"selected":false},{"title":"概念模式","index":2,"selected":false},{"title":"逻辑模式","index":3,"selected":false}],"mode":0,"answer":1,"parse":"数据库系统的三级模式是概念模式、外模式和内模式。概念模式是数据库系统中全局数据逻辑结构的描述，是全体用户公共数据视图。外模式也称子模式或用户模式，它是用户的数据视图，给出了每个用户的局部数据描述。内模式又称物理模式，它给出了数据库物理存取方法，所以选择B"},{"title":"有以下程序\n#include\u003cstdio.h\u003e\nint main(){\nint a[4][4]\u003d{{1,4,3,2},{8,6,5,7},{4,8,6,1}};\nint i,k,t;\nfor(i\u003d0;i\u003c3;i++)\nfor(k\u003di+1;k\u003c4;k++)\nif(a[i][i]\u003ca[k][k]){\nt\u003da[i][i];a[i][i]\u003da[k][k];a[k][k]\u003dt;\n}\nfor(i\u003d0;i\u003c4;i++) printf(\"%d,\",a[0][i]);\nreturn 0;\n}\n程序运行后输出结果为（ ）。","chooseList":[{"title":"1,1,2,6,","index":0,"selected":false},{"title":"6,2,1,1,","index":1,"selected":false},{"title":"6,4,3,2,","index":2,"selected":false},{"title":"2,3,4,6,","index":3,"selected":false}],"mode":0,"answer":2,"parse":"首先对二维数组进行赋值操作，a[0][0]、a[0][1]、...、a[3][2]、a[3][3]的值为1、4、...、6、1。通过嵌套for循环和if语句，对二维数组对角线元素进行由大到小排序操作，之后输出二维数组的第一行的4个元素，故选C"},{"title":"设有以下函数：\nvoid fun(int n, char *s) {...}\n则下面对函数指针的定义和赋值均正确的是（ ）。","chooseList":[{"title":"void (*p)(int, char); p\u003d\u0026fun;","index":0,"selected":false},{"title":"void *p(); p\u003dfun;","index":1,"selected":false},{"title":"void *p(); *pf\u003dfun;","index":2,"selected":false},{"title":"void (*p)(int, char *); p\u003dfun;","index":3,"selected":false}],"mode":0,"answer":3,"parse":"函数的参数可以是指针类型。它的作用是将一个变量的地址传送到另一个函数中。函数名代表函数的入口地址，指向函数的指针应该定义为void (*p)()。如果定义为void *p()，则表示函数p返回值为一个指向void的指针。故选D"},{"title":"以下选项中，当x为大于1的奇数时，值为0的表达式是（ ）。","chooseList":[{"title":"x%2\u003d\u003d0","index":0,"selected":false},{"title":"x/2","index":1,"selected":false},{"title":"x%2!\u003d0","index":2,"selected":false},{"title":"x%2\u003d\u003d1","index":3,"selected":false}],"mode":0,"answer":0,"parse":"算术运算符的优先级高于关系运算符，所以当x为大于1的奇数时，A选项的值为假（0），选项B的值为不定值，但绝对不是0；C选项的值为真（1）；D选项的值为真（1）"},{"title":"设文件指针fp已定义，执行语句fp\u003dfopen(\"file\",\"w\");后，以下针对文本文件file操作叙述的选项中正确的是（ ）。","chooseList":[{"title":"只能写不能读","index":0,"selected":false},{"title":"写操作结束后可以从头开始读","index":1,"selected":false},{"title":"可以在原有内容后追加写","index":2,"selected":false},{"title":"可以随意读和写","index":3,"selected":false}],"mode":0,"answer":0,"parse":"本题考查文件操作函数fopen的基础支撑，以“w”（write）方式打开文件，只能写不能读"},{"title":"在满足实体完整性约束的条件下（ ）。","chooseList":[{"title":"一个关系中应该有一个或多个候选关键字","index":0,"selected":false},{"title":"一个关系中只能有一个候选关键字","index":1,"selected":false},{"title":"一个关系中必须有多关键个候选","index":2,"selected":false},{"title":"一个关系中可以没有候选关键字","index":3,"selected":false}],"mode":0,"answer":0,"parse":"实体完整性约束要求关系的主键中属性值不能为空值，所以选A"},{"title":"以下不合法的数值常量是（ ）。","chooseList":[{"title":"8.0E0.5","index":0,"selected":false},{"title":"2e1","index":1,"selected":false},{"title":"012","index":2,"selected":false},{"title":"0xAbCd","index":3,"selected":false}],"mode":0,"answer":0,"parse":"E（或e）后面的指数必须是整数。"},{"title":"设有定义\nint k\u003d0;\n以下选项的四个表达式中与其他三个表达式的值不相同的是（ ）。","chooseList":[{"title":"k++","index":0,"selected":false},{"title":"++k","index":1,"selected":false},{"title":"k+\u003d1","index":2,"selected":false},{"title":"k+1","index":3,"selected":false}],"mode":0,"answer":0,"parse":"k++先用后加，故A选项的表达式的值为0，而B、C和D选项的表达式均的值均为1"}]}